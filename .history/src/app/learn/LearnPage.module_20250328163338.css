/* LearnPage.module.css */

.appContainer {
    display: flex;
    min-height: 100vh; /* Ensure container takes full height */
    background-color: #fefefe; /* Base background */
  }
  
  /* Wrapper for the main content area (excluding sidebar) */
  .mainAreaWrapper {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    position: relative; /* For potential absolute positioning if needed later */
  }
  
  /* Top bar containing only the StatsBar */
  .topBar {
    padding: 10px 40px 0 40px; /* Align with contentArea/RightRail padding */
    border-bottom: 2px solid var(--duo-border); /* Separator line */
  }
  
  /* Container for scrollable content below the top bar */
  .scrollableContent {
    display: flex;
    flex-grow: 1;
    /* Allow vertical scroll ONLY within this area */
    overflow-y: auto;
    overflow-x: hidden;
    /* Padding for spacing around content and right rail */
    padding: 20px 20px 40px 20px; /* Add bottom padding */
  }
  
  /* Main lesson area */
  .contentArea {
    flex-grow: 1;
    padding: 0 40px; /* Horizontal padding within the central area */
    display: flex;
    flex-direction: column;
    align-items: center;
    max-width: 650px; /* Max width for the lesson path area */
    margin: 0 auto; /* Center the content area if space allows */
  }
  
  /* --- Lesson Header --- */
  .lessonHeader {
    /* Keep Green as per original screenshot */
    background-color: var(--duo-green);
    color: var(--duo-text-light);
    padding: 15px 25px;
    border-radius: 12px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    margin-bottom: 40px;
  }
  
  .headerLeft {
    display: flex;
    align-items: center;
  }
  
  .headerLeft .icon { /* Style FontAwesome icon */
    font-size: 18px;
    margin-right: 15px;
    cursor: pointer;
  }
  
  .headerTitle {
    font-size: 14px;
    font-weight: 700;
    text-transform: uppercase;
    line-height: 1.2;
  }
  
  .headerTitle h2 {
    font-size: 24px;
    font-weight: 800;
    margin-top: 2px;
    text-transform: none;
  }
  
  .guidebookButton {
    background-color: var(--duo-text-light);
    /* Keep text color green */
    color: var(--duo-green-dark);
    border: none;
    padding: 10px 15px;
    border-radius: 12px;
    font-weight: 700;
    font-size: 15px;
    cursor: pointer;
    border-bottom: 3px solid var(--duo-gray-light);
    transition: background-color 0.2s ease;
    display: flex;
    align-items: center;
    gap: 8px; /* Space between icon and text */
  }
  .guidebookButton:hover {
    background-color: #f7f7f7;
  }
  .guidebookButton .icon {
      font-size: 16px; /* Adjust icon size */
  }
  
  
  /* --- Lesson Path --- */
  .lessonPath {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    width: 100%; /* Ensure path takes width */
    padding-bottom: 20px; /* Space for scroll button */
  }
  
  /* Style links wrapping path items */
  .lessonLink {
      display: block; /* Ensure link takes space of the item */
      margin-bottom: 25px; /* Spacing between items - applied to link now */
      text-decoration: none;
  }
  /* Remove margin from the item itself if link handles it */
  .lessonLink > div { /* Target the LessonPathItem component */
      margin-bottom: 0 !important;
  }
  
  
  /* --- Scroll Down Button --- */
  .scrollDownButton {
    margin-top: 20px; /* Space above button */
    width: 45px;
    height: 45px;
    border: 2px solid var(--duo-border);
    border-radius: 50%;
    background-color: white;
    /* Blue icon color for accent */
    color: var(--duo-blue-primary);
    font-size: 18px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 0 var(--duo-border);
    transition: background-color 0.2s ease;
  }
  .scrollDownButton:hover {
    background-color: #f7f7f7;
  }
  .scrollDownButton .icon {
      /* Icon specific styles if needed */
  }
  
  /* --- Right Rail Positioning --- */
  /* RightRail component itself handles internal sticky positioning */
  
  /* Responsive Adjustments (Example) */
  @media (max-width: 1024px) {
      .topBar {
          padding: 10px 20px 0 20px;
      }
       .scrollableContent {
          padding: 20px 10px 40px 10px;
       }
      .contentArea {
          padding: 0 15px;
      }
      /* Hide RightRail on smaller screens if desired */
      /* Add styles to hide RightRail component via className prop */
  }
  
  @media (max-width: 768px) {
      .appContainer {
          flex-direction: column; /* Stack sidebar and content */
      }
      /* Adjust Sidebar styling if needed for mobile (e.g., make it a drawer) */
      /* Adjust mainAreaWrapper */
      .mainAreaWrapper {
          height: auto; /* Allow content height */
      }
      .scrollableContent {
          flex-direction: column; /* Stack contentArea and RightRail */
          overflow-y: visible; /* Let page scroll normally */
      }
      /* Adjust RightRail styles for stacking */
  }