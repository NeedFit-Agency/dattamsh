/* learning.module.css */

/* ----- Base Variables (Ensure these are defined in globals.css or here) ----- */
:root {
  
  }
  
  /* ----- Main Container & Layout ----- */
  .learningContainer {
    display: flex;
    min-height: 100vh;
    background-color: var(--background-medium); /* Base background */
  }
  
  .learningContent {
    flex: 1;
    display: flex;
    flex-direction: column;
    max-width: 1200px; /* Max content width */
    margin: 0 auto;
    background-color: var(--background-light);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
    overflow: hidden; /* Ensures child elements don't break layout */
  }
  
  .learningLayout { /* Applied in layout.tsx */
    width: 100%;
    min-height: 100vh;
    /* Optional: Add a subtle background pattern or gradient to the overall page */
    /* background: linear-gradient(135deg, #f5f7fa 0%, #eef2f7 100%); */
  }
  
  /* ----- Side Panels (Optional - Keep if desired) ----- */
  .sidePanel {
    width: 90px;
    display: none; /* Hidden on mobile by default */
    flex-direction: column;
    align-items: center;
    padding: 20px 0;
    position: relative; /* Needed for absolute positioning inside if any */
  }
  
  .glassPanel {
    background: rgba(255, 255, 255, 0.7); /* Slightly less opaque */
    backdrop-filter: blur(12px) saturate(150%); /* Enhanced glass */
    -webkit-backdrop-filter: blur(12px) saturate(150%);
    border-radius: 20px;
    border: 1px solid rgba(255, 255, 255, 0.18);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    padding: 20px 10px;
    width: 90%;
    height: auto; /* Adjust height as needed or make it flex */
    min-height: 50%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 15px;
  }
  
  .leftPanel {
    composes: sidePanel;
  }
  
  .rightPanel {
    composes: sidePanel;
  }
  
  /* Letter showcase / Progress Indicator Items */
  .letterShowcase { display: flex; flex-direction: column; gap: 15px; align-items: center; }
  .progressIndicator { display: flex; flex-direction: column; gap: 10px; align-items: center; width: 100%; }
  
  .letterItem, .progressPill {
    width: 50px;
    height: 50px;
    border-radius: 14px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: var(--font-size-lg);
    color: var(--text-medium);
    background-color: var(--white);
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
    transition: all 0.3s ease;
    cursor: pointer;
    border: 1px solid var(--border-light);
  }
  
  .letterItem:hover, .progressPill:hover {
    transform: translateY(-3px) scale(1.03);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.08);
    color: var(--text-dark);
  }
  
  .letterItemActive, .progressPillActive {
    composes: letterItem; /* or progressPill */
    background-color: var(--accent-color);
    color: white;
    border-color: var(--accent-dark);
    box-shadow: 0 6px 20px rgba(16, 185, 129, 0.3);
    font-weight: 600;
    transform: scale(1.05); /* Make active item slightly larger */
  }
  
  .progressPillCompleted {
    composes: progressPill;
    background-color: var(--accent-light);
    color: white;
    opacity: 0.8;
  }
  
  /* ----- Header ----- */
  .learningHeader {
    padding: 15px 20px;
    border-bottom: 1px solid var(--border-light);
    background: var(--white);
    position: sticky; /* Make header sticky if desired */
    top: 0;
    z-index: 10;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.03);
  }
  
  .headerNavigation {
    display: flex;
    align-items: center;
    gap: 15px;
    flex-wrap: wrap; /* Allow wrapping on smaller screens */
    max-width: 100%;
  }
  
  .backButton {
    background: none;
    border: none;
    color: var(--text-medium);
    cursor: pointer;
    padding: 8px;
    border-radius: 8px;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    gap: 6px;
    font-size: var(--font-size-lg); /* Icon size */
  }
  
  .backText {
    font-size: var(--font-size-sm);
    font-weight: 600;
    margin-left: 2px;
    display: none; /* Hide text on mobile */
  }
  
  .backButton:hover {
    background-color: var(--background-medium);
    color: var(--text-dark);
  }
  
  .progressBar {
    flex: 1; /* Takes available space */
    min-width: 100px; /* Ensure it doesn't get too small */
    height: 12px;
    background-color: var(--background-medium);
    border-radius: 6px;
    overflow: hidden;
    border: 1px solid var(--border-light);
  }
  
  .progressFill {
    height: 100%;
    background: linear-gradient(90deg, var(--accent-light), var(--accent-color));
    border-radius: 6px;
    transition: width 0.5s cubic-bezier(0.65, 0, 0.35, 1); /* Smoother transition */
  }
  
  .headerActions {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-left: auto; /* Pushes actions to the right */
  }
  
  .heartsContainer {
    display: flex;
    align-items: center;
    gap: 4px;
    color: var(--error-red);
    font-size: var(--font-size-lg); /* Heart icon size */
  }
  .heartsContainer span { /* Optional: Add heart count */
    font-size: var(--font-size-base);
    font-weight: 700;
    color: var(--error-red);
    margin-left: 2px;
  }
  
  .slideCounter {
    font-weight: 600;
    font-size: var(--font-size-sm);
    color: var(--text-medium);
    background-color: var(--background-medium);
    padding: 4px 8px;
    border-radius: 6px;
  }
  
  .settingsButton {
    background: none;
    border: none;
    color: var(--text-medium);
    font-size: var(--font-size-lg);
    cursor: pointer;
    padding: 8px;
    border-radius: 8px;
    transition: all 0.2s ease;
  }
  .settingsButton:hover {
    background-color: var(--background-medium);
    color: var(--text-dark);
  }
  
  /* ----- Main Content Area ----- */
  .learningMain {
    flex: 1;
    padding: clamp(15px, 4vw, 40px); /* Responsive padding */
    display: flex;
    flex-direction: column;
    animation: fadeIn 0.5s ease-out;
  }
  
  .lessonTitle {
    font-size: var(--font-size-2xl);
    font-weight: 700;
    color: var(--text-dark);
    margin-bottom: clamp(20px, 5vh, 40px);
    text-align: center;
  }
  
  .learningArea {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: clamp(20px, 4vw, 30px);
  }
  
  /* ----- Character Display (Quiz/Learning) ----- */
  .characterDisplay {
    width: 100%;
    max-width: 300px; /* Max width for the character box */
    min-height: 180px; /* Ensure minimum height */
    background-color: var(--white);
    border-radius: 20px;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.07);
    display: flex;
    flex-direction: column; /* Allow adding sound button inside */
    align-items: center;
    justify-content: center;
    position: relative;
    padding: 20px;
    margin: 0 auto clamp(25px, 5vh, 40px) auto; /* Center horizontally, add bottom margin */
    border: 1px solid var(--border-light);
  }
  
  .mainCharacter {
    font-size: var(--font-size-display); /* Use responsive display font size */
    font-weight: 600;
    color: var(--text-dark);
    line-height: 1; /* Adjust line height for large fonts */
    margin-bottom: 10px; /* Space below character if sound button is present */
    /* animation: float 3s infinite ease-in-out; Optional subtle animation */
  }
  
  .soundButton {
    background-color: var(--background-medium);
    border: 1px solid var(--border-light);
    color: var(--primary-blue);
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: var(--font-size-lg);
    cursor: pointer;
    transition: all 0.2s ease;
    margin-top: 10px; /* Space above button */
  }
  
  .soundButton:hover {
    background-color: #e0e7ff; /* Light blue hover */
    border-color: var(--primary-blue);
  }
  
  /* ----- Quiz Options ----- */
  .quizOptionsGrid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); /* Responsive grid */
    gap: 15px;
    width: 100%;
    max-width: 600px; /* Limit width of options */
    margin: 0 auto; /* Center options */
  }
  
  .quizOption {
    background-color: var(--white);
    border: 2px solid var(--border-light);
    border-radius: 12px;
    padding: 15px 20px;
    text-align: center;
    font-size: var(--font-size-lg);
    font-weight: 600;
    color: var(--text-dark);
    cursor: pointer;
    transition: all 0.2s ease;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
  }
  
  .quizOption:hover {
    border-color: var(--primary-blue);
    background-color: #eff6ff; /* Light blue background on hover */
  }
  
  .quizOptionSelected {
    border-color: var(--primary-blue);
    background-color: #dbeafe; /* Slightly darker blue for selected */
    box-shadow: 0 0 0 2px var(--primary-blue);
  }
  
  /* States after checking answer */
  .quizOptionCorrect, .quizOptionIncorrect {
    cursor: default;
    color: var(--white);
    border-width: 2px;
  }
  
  .quizOptionCorrect {
    background-color: var(--correct-green);
    border-color: var(--accent-dark);
    box-shadow: 0 4px 15px rgba(16, 185, 129, 0.2);
  }
  
  .quizOptionIncorrect {
    background-color: var(--incorrect-red);
    border-color: #dc2626; /* Darker red */
    box-shadow: 0 4px 15px rgba(239, 68, 68, 0.2);
  }
  
  /* Dimming unselected options */
  .quizOptionDimmed {
    opacity: 0.6;
    cursor: default;
    background-color: var(--background-medium);
    border-color: var(--border-light);
  }
  .quizOptionDimmed:hover { /* Disable hover effect when dimmed */
    border-color: var(--border-light);
    background-color: var(--background-medium);
  }
  
  /* Icon inside option (Optional - for showing check/cross) */
  .quizOptionIcon {
    font-size: var(--font-size-base);
  }
  
  
  /* ----- Feedback Footer ----- */
  .feedbackFooter {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    padding: 15px 20px;
    border-top: 1px solid var(--border-light);
    background-color: var(--white);
    box-shadow: 0 -4px 15px rgba(0, 0, 0, 0.05);
    z-index: 20; /* Above main content */
    animation: slideUp 0.3s ease-out;
    display: flex;
    flex-direction: column; /* Stack feedback text and button */
    align-items: center; /* Center items */
    gap: 10px;
  }
  
  .feedbackCorrect {
    background-color: #e0fdf4; /* Light green */
    border-top: 3px solid var(--correct-green);
  }
  
  .feedbackIncorrect {
    background-color: #fee2e2; /* Light red */
    border-top: 3px solid var(--incorrect-red);
  }
  
  .feedbackContent {
    display: flex;
    align-items: center;
    gap: 12px;
    width: 100%;
    max-width: 1160px; /* Match learningContent max-width minus padding */
    margin: 0 auto;
  }
  
  .feedbackIcon {
    font-size: var(--font-size-xl);
    flex-shrink: 0;
  }
  
  .feedbackIconCorrect { color: var(--correct-green); }
  .feedbackIconIncorrect { color: var(--incorrect-red); }
  
  .feedbackTextContainer {
    flex-grow: 1;
  }
  
  .feedbackTitle {
    font-size: var(--font-size-lg);
    font-weight: 700;
    margin-bottom: 2px;
  }
  .feedbackTitleCorrect { color: var(--accent-dark); }
  .feedbackTitleIncorrect { color: #b91c1c; /* Darker red */}
  
  .feedbackMessage {
    font-size: var(--font-size-base);
    color: var(--text-medium);
  }
  .feedbackMessage strong { /* Highlight correct answer */
     color: var(--text-dark);
     font-weight: 600;
  }
  
  .feedbackButtonContainer {
    width: 100%;
    max-width: 1160px;
    margin: 0 auto;
  }
  
  /* ----- Footer Buttons (Used for both learning and feedback) ----- */
  .learningFooter { /* Standard footer when no feedback is shown */
    display: flex;
    justify-content: space-between;
    padding: 20px;
    border-top: 1px solid var(--border-light);
    background-color: var(--white);
    position: sticky; /* Sticky footer */
    bottom: 0;
    z-index: 5;
  }
  
  .previousButton,
  .continueButton {
    padding: 12px 24px;
    border-radius: 12px;
    font-size: var(--font-size-base);
    font-weight: 700;
    cursor: pointer;
    display: inline-flex; /* Use inline-flex */
    align-items: center;
    justify-content: center; /* Center content */
    gap: 8px;
    transition: all 0.2s ease;
    border: none; /* Remove default border */
    min-width: 120px; /* Ensure minimum width */
  }
  
  .previousButton {
    background-color: var(--white);
    border: 2px solid var(--border-light);
    color: var(--text-medium);
  }
  
  .previousButton:hover:not(:disabled) {
    background-color: var(--background-medium);
    border-color: var(--text-light);
    color: var(--text-dark);
  }
  
  .previousButton:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  
  .continueButton {
    color: var(--white);
    border: none;
    position: relative;
    overflow: hidden;
    transition: transform 0.2s ease, background-color 0.2s ease, box-shadow 0.2s ease;
    /* Default state (can be overridden by correct/incorrect) */
    background-color: var(--primary-blue);
    border-bottom: 3px solid var(--primary-blue-dark);
    box-shadow: 0 4px 10px rgba(59, 130, 246, 0.2);
  }
  
  .continueButtonCorrect { /* Green button */
    background-color: var(--correct-green);
    border-bottom: 3px solid var(--accent-dark);
    box-shadow: 0 4px 10px rgba(16, 185, 129, 0.2);
  }
  .continueButtonCorrect:hover:not(:disabled) {
    background-color: var(--accent-light);
  }
  
  .continueButtonIncorrect { /* Red button */
     background-color: var(--incorrect-red);
     border-bottom: 3px solid #b91c1c;
     box-shadow: 0 4px 10px rgba(239, 68, 68, 0.2);
  }
  .continueButtonIncorrect:hover:not(:disabled) {
    background-color: #f87171; /* Lighter red */
  }
  
  .continueButton:hover:not(:disabled) {
    transform: translateY(-2px);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15); /* Generic shadow increase */
  }
  
  .continueButton:active:not(:disabled) {
    transform: translateY(1px);
    border-bottom-width: 1px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  }
  
  .continueButton:disabled {
    background-color: var(--text-light);
    border-bottom-color: var(--text-medium);
    opacity: 0.7;
    cursor: not-allowed;
    box-shadow: none;
  }
  
  /* ----- Modals (Keep as is or refine visuals) ----- */
  .modalOverlay { /* Existing modal styles seem ok, adjust if needed */
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.6); /* Darker overlay */
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    animation: fadeIn 0.2s ease-out;
  }
  .modalContent {
    background-color: var(--white);
    border-radius: 16px;
    padding: 24px;
    max-width: 400px;
    width: 90%;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    animation: slideInModal 0.3s ease-out;
  }
  /* Add styles for modal buttons if needed */
  
  /* ----- Animations ----- */
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @keyframes slideInModal {
    from { transform: translateY(-20px) scale(0.95); opacity: 0; }
    to { transform: translateY(0) scale(1); opacity: 1; }
  }
  
  @keyframes slideUp {
    from { transform: translateY(100%); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }
  
  /* Optional float animation for character */
  @keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-8px); }
  }
  
  /* ----- Responsive Styles ----- */
  
  /* Medium screens (Tablets) */
  @media (min-width: 640px) {
    .backText {
      display: inline; /* Show back button text */
    }
    .headerNavigation {
      flex-wrap: nowrap; /* Prevent wrapping header items */
    }
    .quizOptionsGrid {
      grid-template-columns: repeat(2, 1fr); /* 2 columns for options */
    }
    .feedbackFooter {
       flex-direction: row; /* Side-by-side feedback text and button */
       justify-content: space-between;
       align-items: center;
       padding: 15px 30px;
    }
    .feedbackButtonContainer {
       width: auto; /* Allow button to size naturally */
       margin: 0;
    }
  }
  
  /* Large screens (Desktops) */
  @media (min-width: 1024px) {
    .sidePanel {
      display: flex; /* Show side panels */
      width: 100px;
    }
    .learningContent {
      /* Adjust max-width if side panels are visible */
       max-width: calc(100% - 200px);
    }
    .quizOptionsGrid {
      /* Maybe more columns on very large screens */
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    }
  }
  
  /* Extra Small Devices (Adjust header further if needed) */
  @media (max-width: 480px) {
    .headerActions {
      gap: 8px; /* Reduce gap */
    }
    .heartsContainer, .settingsButton {
       font-size: var(--font-size-base); /* Slightly smaller icons */
    }
    .slideCounter {
       display: none; /* Hide slide counter on very small screens */
    }
    .quizOption {
       padding: 12px 15px;
       font-size: var(--font-size-base);
    }
     .feedbackContent {
       flex-direction: column;
       align-items: flex-start; /* Align text left */
       gap: 5px;
     }
     .feedbackIcon {
       display: none; /* Hide icon on very small screens */
     }
     .feedbackButtonContainer {
        margin-top: 10px; /* Add space above button */
     }
  }