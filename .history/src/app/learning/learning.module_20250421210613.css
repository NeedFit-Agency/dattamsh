/* learning.module.css */
/* 
/* ----- Base Variables (Ensure these are defined in globals.css or here) ----- */

  /* ----- Main Container & Layout ----- */
  .learningContainer {
    display: flex;
    min-height: 100vh;
    background-color: var(--background-medium);
    background-image: 
      radial-gradient(circle at 10% 20%, rgba(26, 162, 255, 0.05) 0%, transparent 20%),
      radial-gradient(circle at 90% 80%, rgba(28, 176, 246, 0.05) 0%, transparent 20%),
      radial-gradient(circle at 50% 50%, rgba(26, 162, 255, 0.03) 0%, transparent 40%);
    justify-content: center;
    align-items: center;
    padding: 1.5rem; /* Reduced from 20px for better mobile view */
  }
  
  .learningContent {
    flex: 1;
    display: flex;
    flex-direction: column;
    max-width: 1000px; /* Increased from 900px for better content display */
    margin: 0 auto;
    background-color: var(--white);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);
    border-radius: 1.25rem; /* Changed to rem for consistency */
    overflow: hidden;
    min-height: calc(100vh - 3rem); /* Adjusted to match container padding */
    padding-bottom: 4rem; /* Increased from 60px for better spacing */
    position: relative;
  }

  /* Add playful decorative elements in corners */
  .learningContent::before {
    content: '';
    position: absolute;
    top: 20px;
    right: 20px;
    width: 80px;
    height: 80px;
    background-image: url('/images/mascot-small.png');
    background-size: contain;
    background-repeat: no-repeat;
    opacity: 0.05;
    z-index: 0;
  }
  
  .learningLayout { /* Applied in layout.tsx */
    width: 100%;
    min-height: 100vh;
  }
  
  /* ----- Header ----- */
  .learningHeader {
    padding: 1.25rem 1.5rem; /* Changed from 16px 24px */
    border-bottom: 1px solid var(--border-light);
    background: linear-gradient(to right, var(--white), #f8faff);
    position: sticky;
    top: 0;
    z-index: 10;
  }
  
  .headerNavigation {
    display: flex;
    align-items: center;
    gap: 1.25rem; /* Changed from 20px */
    max-width: 100%;
  }
  
  .backButton {
    background: none;
    border: none;
    color: var(--text-medium);
    cursor: pointer;
    padding: 8px;
    border-radius: 8px;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    gap: 6px;
    font-size: var(--font-size-lg); /* Icon size */
  }
  
  .backText {
    font-size: var(--font-size-sm);
    font-weight: 600;
    margin-left: 2px;
    display: none; /* Hide text on mobile */
  }
  
  .backButton:hover {
    background-color: var(--background-medium);
    color: var(--text-dark);
  }
  
  .progressBar {
    flex: 1;
    height: 8px;
    background-color: var(--background-medium);
    border-radius: 20px;
    overflow: hidden;
    border: none;
  }
  
  .progressFill {
    height: 100%;
    background: linear-gradient(90deg, #4CAF50, #8BC34A);
    border-radius: 20px;
    transition: width 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .headerActions {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-left: auto; /* Pushes actions to the right */
  }
  
  .heartsContainer {
    display: flex;
    align-items: center;
    gap: 4px;
    color: var(--error-red);
    font-size: var(--font-size-lg); /* Heart icon size */
  }
  .heartsContainer span { /* Optional: Add heart count */
    font-size: var(--font-size-base);
    font-weight: 700;
    color: var(--error-red);
    margin-left: 2px;
  }
  
  .settingsButton {
    background: none;
    border: none;
    color: var(--text-medium);
    font-size: var(--font-size-lg);
    cursor: pointer;
    padding: 8px;
    border-radius: 8px;
    transition: all 0.2s ease;
  }
  .settingsButton:hover {
    background-color: var(--background-medium);
    color: var(--text-dark);
  }
  
  
  /* ----- Main Content Area ----- */
  .learningMain {
    flex: 1;
    padding: 2rem 1.5rem; /* Changed from 32px 24px */
    display: flex;
    flex-direction: column;
    max-width: 900px; /* Increased from 800px */
    margin: 0 auto;
    width: 100%;
  }
  
  .lessonTitle {
    font-size: 1.75rem; /* Changed from 28px */
    font-weight: 700;
    color: var(--text-dark);
    margin-bottom: 1.5rem; /* Changed from 24px */
    text-align: center;
  }
  
  .learningArea {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: clamp(1.25rem, 4vw, 2rem); /* More responsive gap */
  }
  
  /* ----- Learning Slide Specific ----- */
  .learningSlideLayout {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.5rem;
    align-items: start;
    padding: 1.5rem;
    background: linear-gradient(to bottom, #f0f8ff, #e6f3ff);
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
    position: relative;
    overflow: hidden;
    border: 2px solid rgba(235, 245, 255, 0.8);
  }

  /* Add playful decorative elements */
  .learningSlideLayout::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 120px;
    height: 120px;
    background-image: url('/images/mascot-small.png');
    background-size: contain;
    background-repeat: no-repeat;
    opacity: 0.1;
    transform: rotate(15deg);
    z-index: 0;
  }

  /* Add themed dots pattern */
  .learningSlideLayout::after {
    content: '';
    position: absolute;
    bottom: 20px;
    left: 20px;
    width: 100px;
    height: 100px;
    background-image: radial-gradient(circle, rgba(76, 175, 80, 0.2) 2px, transparent 3px);
    background-size: 15px 15px;
    z-index: 0;
    opacity: 0.5;
  }
  
  .learningVisualColumn {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    z-index: 1;
  }
  
  .learningVisualColumn img {
    width: 100%;
    max-width: 400px;
    height: auto;
    border-radius: 16px;
    box-shadow: 0 6px 20px rgba(0,0,0,0.1);
    margin: 0 auto;
    display: block;
    border: 1px solid var(--border-light);
    transition: transform 0.2s ease;
  }
  
  .exampleImageContainer {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1.25rem;
    margin-top: 1.25rem;
    padding: 1.5rem;
    background: rgba(255, 255, 255, 0.95);
    border-radius: 1.25rem;
    position: relative;
    z-index: 2;
    width: 100%;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
    backdrop-filter: blur(10px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1),
                0 5px 15px rgba(0, 0, 0, 0.05);
    border: 2px solid rgba(235, 245, 255, 0.8);
    animation: floatIn 0.6s ease-out forwards;
  }
  
  .exampleImage {
    width: 100%;
    height: 160px;
    object-fit: contain;
    background: linear-gradient(to bottom, #ffffff, #f5f9ff);
    padding: 15px;
    border-radius: 16px;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.06);
    cursor: pointer;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    border: 2px solid rgba(0, 0, 0, 0.03);
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    animation: springIn 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
    animation-delay: calc(var(--image-index, 0) * 0.1s);
  }

  .exampleImage:hover {
    transform: scale(1.05);
    box-shadow: 0 12px 20px rgba(0, 0, 0, 0.1);
    border-color: rgba(76, 175, 80, 0.3);
  }
  
  .exampleImage:after {
    content: attr(alt);
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.6);
    color: white;
    padding: 5px 8px;
    font-size: 14px;
    text-align: center;
    transform: translateY(100%);
    transition: transform 0.3s ease;
  }
  
  .exampleImage:hover:after {
    transform: translateY(0);
  }
  
  @keyframes floatIn {
    0% { 
      opacity: 0;
      transform: translateY(20px);
    }
    100% { 
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* ----- Mascot ----- */
  .mascotContainer {
    display: flex;
    gap: 1.25rem; /* Changed from 20px */
    align-items: flex-start;
    margin-bottom: 1.5rem; /* Changed from 24px */
  }
  
  .mascotImageContainer {
    width: 80px; /* Adjust size as needed */
    height: 100px;
    flex-shrink: 0; /* Prevent mascot from shrinking */
    display: flex;
    align-items: flex-end; /* Mascot sits at bottom of its container */
    margin-left: 15px; /* Space between bubble and mascot */
  }
  
  .mascotImage {
    width: 120px;
    height: 120px;
    object-fit: contain;
    margin-bottom: -20px; /* Pull up slightly to overlap with speech bubble */
    animation: mascotBounce 3s infinite ease-in-out;
  }
  
  .mascotSpeechBubble {
    flex: 1;
    background: linear-gradient(135deg, #ffffff, #f0f8ff, #e6f0ff);
    border-radius: 1.25rem;
    padding: 1.5rem;
    position: relative;
    border: 2px solid #d9e8ff;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.05);
    animation: popIn 0.5s ease-out forwards;
  }
  
  /* Speech bubble tail */
  .mascotSpeechBubble::after {
    content: '';
    position: absolute;
    left: 100%;
    top: 30px;
    border-top: 15px solid transparent;
    border-bottom: 15px solid transparent;
    border-left: 18px solid #e7f8ff;
    filter: drop-shadow(2px 2px 2px rgba(0,0,0,0.05));
  }
  
  .mascotSpeechBubble p {
    margin: 0 0 12px 0;
    font-size: 1.1rem;
    line-height: 1.6;
    color: var(--text-dark);
    font-weight: 500;
  }
  
  .mascotSpeechBubble p em {
    font-style: normal;
    background-color: #fffde7;
    padding: 2px 4px;
    border-radius: 4px;
    font-weight: 600;
  }
  
  /* Custom styling for emojis to make them pop */
  .mascotSpeechBubble p span.emoji {
    font-size: 1.5em;
    vertical-align: middle;
    margin: 0 2px;
    display: inline-block;
    transform-origin: center;
    animation: wiggle 2s infinite ease-in-out;
  }
  
  @keyframes wiggle {
    0%, 100% { transform: rotate(0deg); }
    25% { transform: rotate(5deg); }
    75% { transform: rotate(-5deg); }
  }
  
  @keyframes popIn {
    0% { transform: scale(0.95); opacity: 0; }
    100% { transform: scale(1); opacity: 1; }
  }
  
  .audioButton {
    background-color: var(--primary-blue);
    color: var(--white);
    border: none;
    border-radius: 10px;
    padding: 8px 14px;
    font-size: var(--font-size-sm); /* Slightly smaller font */
    font-weight: 600;
    cursor: pointer;
    display: inline-flex; /* Align icon and text nicely */
    align-items: center;
    gap: 8px;
    margin-top: 15px; /* Space above the button */
    transition: background-color 0.2s ease, transform 0.1s ease;
    border-bottom: 2px solid var(--primary-blue-dark);
  }
  
  .audioButton:hover {
    background-color: var(--primary-blue-dark);
  }
  .audioButton:active {
      transform: translateY(1px); /* Subtle press effect */
      border-bottom-width: 1px;
  }
  /* Animation for when audio is playing */
  .audioButtonPlaying {
      animation: pulse 1.5s infinite;
  }
  
  
  /* ----- Drag and Drop Specific ----- */
  .dragDropInstruction {
    font-size: 1.2rem;
    color: var(--text-dark);
    text-align: center;
    margin-bottom: 1rem;
    font-weight: 600;
    padding: 1rem 1.5rem;
    background: rgba(255, 255, 255, 0.8);
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    max-width: 700px;
    border: 2px solid rgba(235, 245, 255, 0.8);
    position: relative;
    z-index: 1;
  }
  .dragDropArea {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    width: 100%;
    padding: 1.5rem;
    align-items: center;
    background: linear-gradient(to bottom, #f7fbff, #edf5ff);
    border-radius: 20px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
    position: relative;
    overflow: hidden;
  }
  .dragDropArea::before {
    content: '';
    position: absolute;
    bottom: -20px;
    right: -20px;
    width: 200px;
    height: 200px;
    background-image: url('/images/mascot-small.png');
    background-size: contain;
    background-repeat: no-repeat;
    opacity: 0.05;
    transform: rotate(-15deg);
    z-index: 0;
  }
  .draggableSourceList {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
    justify-content: center;
    min-height: 5rem;
    padding: 1.5rem;
    background: rgba(255, 255, 255, 0.9);
    border: 2px dashed #c8d9ef;
    border-radius: 16px;
    width: 100%;
    margin: 0 auto;
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.05);
    position: relative;
    z-index: 1;
  }
  .dropTargetsContainer {
    display: flex;
    gap: 1.5rem; /* Changed from 2rem */
    width: 100%;
    justify-content: center;
    margin-top: 0.75rem; /* Changed from 1rem */
    padding: 0 0.75rem; /* Changed from 1rem */
  }
  .dropTargetColumn {
    flex: 1;
    max-width: 450px;
    min-width: 300px;
    background: var(--white);
    border: none;
    border-radius: 16px;
    padding: 1.25rem;
    height: 450px;
    display: flex;
    flex-direction: column;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  }
  .dropTargetColumnDraggingOver {
    background: var(--background-medium);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  }
  .dropTargetTitle {
    font-size: 1.25rem;
    margin-bottom: 1rem;
    padding: 0.75rem;
    border-radius: 8px;
    text-align: center;
    font-weight: bold;
  }
  .dropTargetTitleNatural {
    background: var(--success-light);
    color: var(--success-dark);
  }
  .dropTargetTitleManMade {
    background: var(--primary-light);
    color: var(--primary-dark);
  }
  .dropTargetList {
    flex: 1;
    padding: 1rem;
    background: var(--background-medium);
    border-radius: 12px;
    min-height: 300px;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    border: none;
  }
  .draggableItem {
    padding: 0.75rem 1rem;
    background: var(--white);
    border: none;
    border-radius: 12px;
    display: flex;
    align-items: center;
    user-select: none;
    font-size: 1rem;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
    cursor: grab;
    transition: all 0.2s ease;
  }
  .draggableItem:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }
  .draggableItemDragging {
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    background: var(--white);
    transform: scale(1.02);
  }
  .itemCorrect {
    background: var(--success-light);
    color: var(--success-dark);
    box-shadow: 0 2px 8px rgba(76, 175, 80, 0.2);
  }
  .itemIncorrect {
    background: var(--error-light);
    color: var(--error-dark);
    box-shadow: 0 2px 8px rgba(239, 68, 68, 0.2);
  }
  .dragDropFeedback {
    margin-top: 1rem;
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    font-size: 1.1rem;
    font-weight: bold;
    text-align: center;
  }
  .dragDropFeedbackCorrect {
    background: var(--success-light);
    color: var(--success-dark);
    border: 1px solid var(--success-green);
  }
  .dragDropFeedbackIncorrect {
    background: var(--error-light);
    color: var(--error-dark);
    border: 1px solid var(--error-red);
  }
  
  
  /* ----- Footer Buttons ----- */
  .learningFooter {
    padding: 1.25rem 1.5rem; /* Changed from 16px 24px */
    border-top: 1px solid var(--border-light);
    background-color: var(--white);
    display: flex;
    justify-content: space-between;
    gap: 1rem; /* Changed from 16px */
    position: relative;
    margin-top: -4rem; /* Adjusted to match new padding-bottom */
  }
  .previousButton, .continueButton {
    padding: 12px 24px;
    border-radius: 12px;
    font-size: 16px;
    font-weight: 600;
    display: inline-flex;
    align-items: center;
    gap: 8px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    min-width: 140px;
    justify-content: center;
    position: relative;
    overflow: hidden;
  }
  .previousButton {
    background-color: var(--white);
    border: 2px solid var(--border-light);
    color: var(--text-medium);
  }
  .previousButton:hover:not(:disabled) {
    background-color: var(--background-medium);
    border-color: var(--text-light);
    color: var(--text-dark);
    transform: translateY(-2px);
  }
  .previousButton:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  .continueButton {
    background-color: #4CAF50;
    color: white;
    border: none;
    box-shadow: 0 4px 12px rgba(76, 175, 80, 0.2);
  }
  .continueButton:hover:not(:disabled) {
    transform: translateY(-2px);
    box-shadow: 0 6px 16px rgba(76, 175, 80, 0.3);
    background-color: #45a049;
  }
  .continueButton:disabled {
    background-color: var(--text-light);
    border-bottom-color: var(--text-medium);
    opacity: 0.7;
    cursor: not-allowed;
    box-shadow: none;
  }
  
  /* ----- Modals ----- */
  .modalOverlay { position: fixed; top: 0; left: 0; right: 0; bottom: 0; background-color: rgba(0, 0, 0, 0.6); display: flex; align-items: center; justify-content: center; z-index: 1000; animation: fadeIn 0.2s ease-out; }
  .modalContent { background-color: var(--white); border-radius: 16px; padding: 24px; max-width: 400px; width: 90%; box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2); animation: slideInModal 0.3s ease-out; }
  .modalButtons { display: flex; gap: 12px; justify-content: flex-end; margin-top: 20px; }
  .modalCancel, .modalConfirm { padding: 10px 16px; border-radius: 8px; font-weight: 600; cursor: pointer; border: none; font-size: var(--font-size-sm); }
  .modalCancel { background-color: var(--white); border: 1px solid var(--border-light); color: var(--text-dark); }
  .modalCancel:hover { background-color: var(--background-medium); }
  .modalConfirm { background-color: var(--error-red); color: var(--white); }
  .modalConfirm:hover { background-color: #dc2626; }
  
  
  /* ----- Animations ----- */
  @keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }
  @keyframes slideInModal { from { transform: translateY(-20px) scale(0.95); opacity: 0; } to { transform: translateY(0);  opacity: 1; } }
  @keyframes slideUp { from { transform: translateY(100%); opacity: 0; } to { transform: translateY(0); opacity: 1; } }
  @keyframes mascotBounce { 0%, 100% { transform: translateY(0); } 50% { transform: translateY(-8px); } }
  @keyframes pulse { 0% { opacity: 1; } 50% { opacity: 0.7; } 100% { opacity: 1; } }
  
  /* ----- Responsive Styles ----- */
  @media (min-width: 640px) {
    .backText { display: inline; }
    .headerNavigation { flex-wrap: nowrap; }
  }
  @media (min-width: 768px) { /* Adjust mascot bubble tail */
      .mascotSpeechBubble::after { top: 20px; } /* Better vertical alignment on larger screens */
  }
  @media (min-width: 1024px) {
     /* Optional: Adjustments for very large screens */
  }
  @media (max-width: 768px) {
    .learningContainer {
      padding: 0;
    }
    
    .learningContent {
      border-radius: 0;
      min-height: 100vh;
    }
    
    .learningMain {
      padding: 1.5rem 1rem; /* Reduced padding on mobile */
    }
    
    .mascotContainer {
      flex-direction: column;
      align-items: center;
    }
    
    .exampleImageContainer {
      grid-template-columns: 1fr;
      padding: 1rem;
      gap: 1rem;
    }
    
    .dropTargetsContainer {
      flex-direction: column;
      gap: 1rem;
    }
    
    .learningFooter {
      padding: 1rem;
    }
  }

  @media (max-width: 640px) {
    .exampleImageContainer {
        grid-template-columns: 1fr; /* Single column on mobile */
        padding: 15px;
        gap: 15px;
    }

    .exampleImage {
        height: 140px;
    }
  }

/* Image Styling */
.draggableItem img {
    height: 30px;
    width: 30px;
    margin-right: 8px;
    pointer-events: none;
    object-fit: contain;
}

/* Ensure images in the source list are properly sized */
.draggableSourceList img {
    width: 30px;
    height: 30px;
    object-fit: contain;
    vertical-align: middle;
}

/* Add some hover effects to the images */
.draggableItem:hover img {
    transform: scale(1.1);
    transition: transform 0.2s ease;
}

/* Add subtle animation for images */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Tooltip styles */
.tooltipWrapper {
    position: relative;
    display: inline-block;
    width: 100%;
}

.tooltipWrapper:before {
    content: attr(data-tooltip);
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%) translateY(-8px);
    padding: 8px 12px;
    background-color: rgba(0, 0, 0, 0.8);
    color: white;
    font-size: 14px;
    border-radius: 6px;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: 1000;
    pointer-events: none;
}

.tooltipWrapper:after {
    content: '';
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    border-width: 6px;
    border-style: solid;
    border-color: rgba(0, 0, 0, 0.8) transparent transparent transparent;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    pointer-events: none;
}

.tooltipWrapper:hover:before,
.tooltipWrapper:hover:after {
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) translateY(0);
}

/* Add spring animation to example images */
@keyframes springIn {
    0% { transform: scale(0.3); opacity: 0; }
    50% { transform: scale(1.1); }
    70% { transform: scale(0.9); }
    100% { transform: scale(1); opacity: 1; }
}

/* ----- Success Animation Effects ----- */
.dropTargetColumn.allCorrect {
  animation: successPulse 1s ease-in-out;
  border-color: var(--success-green);
  box-shadow: 0 0 20px rgba(76, 175, 80, 0.3);
}

.dragDropFeedbackCorrect {
  background: var(--success-light);
  color: var(--success-dark);
  border: 1px solid var(--success-green);
  animation: bounceIn 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  position: relative;
}

/* Confetti container */
.confettiContainer {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1000;
}

/* Individual confetti pieces */
.confetti {
  position: absolute;
  width: 10px;
  height: 10px;
  background-color: #4CAF50;
  opacity: 0;
}

/* Generate multiple confetti pieces */
@keyframes confettiFall {
  0% {
    transform: translateY(0) rotate(0deg);
    opacity: 1;
  }
  100% {
    transform: translateY(100vh) rotate(360deg);
    opacity: 0;
  }
}

/* Success pulse animation */
@keyframes successPulse {
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(76, 175, 80, 0.4);
  }
  50% {
    transform: scale(1.02);
    box-shadow: 0 0 20px 10px rgba(76, 175, 80, 0.2);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(76, 175, 80, 0);
  }
}

/* Bounce in animation */
@keyframes bounceIn {
  0% {
    transform: scale(0.3);
    opacity: 0;
  }
  50% {
    transform: scale(1.1);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Success sparkle effect */
.dragDropFeedbackCorrect::after {
  content: '';
  position: absolute;
  top: -10%;
  left: -10%;
  right: -10%;
  bottom: -10%;
  background: radial-gradient(circle, rgba(76, 175, 80, 0.2) 0%, transparent 70%);
  animation: sparkle 2s ease-in-out infinite;
  z-index: -1;
  border-radius: inherit;
}

@keyframes sparkle {
  0% {
    transform: scale(1);
    opacity: 0;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.5;
  }
  100% {
    transform: scale(1);
    opacity: 0;
  }
}

/* Add success state to items */
.itemCorrect {
  background: var(--success-light);
  color: var(--success-dark);
  box-shadow: 0 2px 8px rgba(76, 175, 80, 0.2);
  animation: successItemPop 0.4s ease-out;
  position: relative;
}

.itemCorrect::before {
  content: '✓';
  position: absolute;
  right: 10px;
  color: var(--success-green);
  font-weight: bold;
  opacity: 0;
  animation: fadeInCheck 0.3s 0.2s forwards;
}

@keyframes successItemPop {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes fadeInCheck {
  from {
    opacity: 0;
    transform: translateX(10px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Additional Styling for Learning Format Components */

/* ----- Gallery Component ----- */
.galleryLayout {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.galleryDescription {
  background: rgba(255, 255, 255, 0.9);
  padding: 1.5rem;
  border-radius: 1rem;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
}

.galleryContainer {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  width: 100%;
  position: relative;
}

.mainGallery {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;
  width: 100%;
}

.galleryImageWrapper {
  flex: 1;
  position: relative;
  border-radius: 0.75rem;
  overflow: hidden;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
  background: #fff;
  max-width: 80%;
  margin: 0 auto;
}

.galleryImage {
  width: 100%;
  height: auto;
  max-height: 400px;
  object-fit: contain;
  display: block;
  margin: 0 auto;
  padding: 1rem;
}

.imageCaption {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.6);
  color: white;
  padding: 0.75rem;
  text-align: center;
  font-size: 0.875rem;
}

.galleryNav {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 3rem;
  height: 3rem;
  background: white;
  border: none;
  border-radius: 50%;
  cursor: pointer;
  font-size: 1.25rem;
  color: var(--text-medium);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transition: all 0.2s ease;
}

.galleryNav:hover {
  background: var(--primary-light);
  color: var(--primary-dark);
  transform: scale(1.05);
}

.fullscreenButton {
  position: absolute;
  top: 0.75rem;
  right: 0.75rem;
  background: rgba(0, 0, 0, 0.5);
  border: none;
  color: white;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  opacity: 0.7;
  transition: opacity 0.2s ease;
}

.fullscreenButton:hover {
  opacity: 1;
}

.galleryThumbnails {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
  justify-content: center;
  margin-top: 1rem;
}

.thumbnail {
  width: 60px;
  height: 60px;
  border-radius: 0.5rem;
  overflow: hidden;
  cursor: pointer;
  border: 2px solid transparent;
  transition: all 0.2s ease;
}

.thumbnail:hover {
  transform: translateY(-2px);
}

.thumbnail img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.activeThumbnail {
  border-color: var(--primary-blue);
  transform: scale(1.05);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.15);
}

.fullscreenOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.9);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.closeFullscreen {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: none;
  border: none;
  color: white;
  font-size: 2rem;
  cursor: pointer;
}

.fullscreenImage {
  max-width: 90vw;
  max-height: 80vh;
  object-fit: contain;
}

.fullscreenCaption {
  color: white;
  margin-top: 1rem;
  padding: 0.5rem 1rem;
  background: rgba(0, 0, 0, 0.5);
  border-radius: 0.5rem;
  max-width: 80%;
  text-align: center;
}

/* ----- Quiz Component ----- */
.quizContainer {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  background: linear-gradient(to bottom, #f5f9ff, #edf5ff);
  padding: 1.5rem;
  border-radius: 1rem;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
}

.quizQuestionSection {
  text-align: center;
  padding: 1rem;
  background: rgba(255, 255, 255, 0.8);
  border-radius: 0.75rem;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
}

.quizQuestion {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 1rem;
  color: var(--text-dark);
}

.quizImageContainer {
  margin: 1rem auto;
  max-width: 400px;
}

.quizImage {
  width: 100%;
  height: auto;
  border-radius: 0.5rem;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

.quizOptionsContainer {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.quizOption {
  padding: 1rem;
  border-radius: 0.75rem;
  background: white;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  cursor: pointer;
  transition: all 0.2s ease;
  border: 2px solid transparent;
}

.quizOption:hover {
  background: var(--background-medium);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.selectedOption {
  border-color: var(--primary-blue);
  background: var(--background-medium);
}

.correctOption {
  border-color: var(--success-green);
  background: var(--success-light);
}

.incorrectOption {
  border-color: var(--error-red);
  background: var(--error-light);
}

.revealCorrect {
  border: 2px dashed var(--success-green);
  background: rgba(76, 175, 80, 0.05);
}

.optionContent {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.optionText {
  flex: 1;
}

.optionIcon {
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.correctIcon {
  color: var(--success-green);
}

.incorrectIcon {
  color: var(--error-red);
}

.quizExplanation {
  padding: 1rem;
  border-radius: 0.75rem;
  margin-top: 1rem;
}

.correctExplanation {
  background: var(--success-light);
  border: 1px solid var(--success-green);
}

.incorrectExplanation {
  background: var(--error-light);
  border: 1px solid var(--error-red);
}

.quizExplanation h4 {
  margin-top: 0;
  margin-bottom: 0.5rem;
  font-weight: 600;
}

.quizActionButtons {
  display: flex;
  justify-content: center;
  margin-top: 1rem;
}

.checkButton, .resetButton {
  padding: 0.75rem 1.5rem;
  border-radius: 0.5rem;
  font-weight: 600;
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
  transition: all 0.2s ease;
  border: none;
}

.checkButton {
  background: var(--primary-blue);
  color: white;
}

.checkButton:hover:not(:disabled) {
  background: var(--primary-blue-dark);
  transform: translateY(-2px);
}

.checkButton:disabled {
  background: var(--text-light);
  cursor: not-allowed;
}

.resetButton {
  background: var(--text-medium);
  color: white;
}

.resetButton:hover {
  background: var(--text-dark);
  transform: translateY(-2px);
}

/* ----- Code Example Component ----- */
.codeExampleContainer {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  background: linear-gradient(135deg, #f8faff, #f0f4fa);
  padding: 1.5rem;
  border-radius: 1rem;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
}

.codeDescription {
  background: rgba(255, 255, 255, 0.9);
  padding: 1.25rem;
  border-radius: 0.75rem;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
}

.codeBlockContainer {
  background: #1e1e1e; /* VS Code dark theme color */
  border-radius: 0.75rem;
  overflow: hidden;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
}

.codeHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.75rem 1rem;
  background: #252526; /* VS Code darker background */
  border-bottom: 1px solid #333;
}

.languageTag {
  padding: 0.25rem 0.75rem;
  background: #0e639c; /* VS Code blue */
  color: white;
  border-radius: 0.25rem;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
}

.codeActions {
  display: flex;
  gap: 0.5rem;
}

.copyButton, .runCodeButton {
  padding: 0.25rem 0.75rem;
  border-radius: 0.25rem;
  font-size: 0.75rem;
  font-weight: 600;
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
  cursor: pointer;
  transition: all 0.2s ease;
  border: none;
}

.copyButton {
  background: #3a3a3a;
  color: white;
}

.copyButton:hover {
  background: #505050;
}

.runCodeButton {
  background: #3b873b; /* VS Code green */
  color: white;
}

.runCodeButton:hover {
  background: #47a547;
}

.codeBlock {
  margin: 0;
  padding: 1rem 0;
  overflow-x: auto;
  font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
  font-size: 0.9rem;
  line-height: 1.5;
  color: #d4d4d4; /* VS Code text color */
}

.codeLine {
  display: flex;
  width: 100%;
}

.lineNumber {
  user-select: none;
  text-align: right;
  color: #858585;
  width: 3rem;
  padding-right: 1rem;
  display: inline-block;
}

.lineContent {
  flex: 1;
  padding-right: 1rem;
}

.highlightedLine {
  background: rgba(255, 255, 0, 0.1);
  border-left: 2px solid #ddb100;
}

.codeOutput {
  background: #252526;
  border-top: 1px solid #333;
  padding: 0;
  overflow: hidden;
}

.outputHeader {
  padding: 0.5rem 1rem;
  background: #333;
  font-weight: 600;
  color: white;
  font-size: 0.8rem;
}

.codeOutput pre {
  margin: 0;
  padding: 1rem;
  max-height: 200px;
  overflow-y: auto;
  font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
  font-size: 0.9rem;
  color: #d4d4d4;
}

.codeExplanation {
  background: rgba(255, 255, 255, 0.9);
  padding: 1.25rem;
  border-radius: 0.75rem;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
}

.codeExplanation h4 {
  margin-top: 0;
  margin-bottom: 0.75rem;
  color: var(--text-dark);
  font-weight: 600;
}

/* ----- Video Component ----- */
.videoContainer {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  background: linear-gradient(to bottom, #f5f9ff, #edf5ff);
  padding: 1.5rem;
  border-radius: 1rem;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
}

.videoDescription {
  background: rgba(255, 255, 255, 0.9);
  padding: 1.25rem;
  border-radius: 0.75rem;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
}

.videoContent {
  width: 100%;
  border-radius: 0.75rem;
  overflow: hidden;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
}

.videoWrapper {
  position: relative;
  padding-bottom: 56.25%; /* 16:9 ratio */
  height: 0;
  overflow: hidden;
}

.videoWrapper iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: none;
}

.videoPlayerWrapper {
  position: relative;
  width: 100%;
}

.videoPlayer {
  width: 100%;
  height: auto;
  display: block;
  max-height: 500px;
}

.videoControls {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.6);
  padding: 0.75rem;
  display: flex;
  gap: 0.75rem;
  align-items: center;
  opacity: 0;
  transition: opacity 0.2s ease;
}

.videoPlayerWrapper:hover .videoControls {
  opacity: 1;
}

.videoControlButton {
  background: none;
  border: none;
  color: white;
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
}

.videoControlButton:hover {
  background: rgba(255, 255, 255, 0.2);
}

/* ----- Responsive Styles ----- */
@media (max-width: 768px) {
  .galleryImageWrapper {
    max-width: 100%;
  }
  
  .galleryNav {
    width: 2.5rem;
    height: 2.5rem;
  }
  
  .thumbnail {
    width: 50px;
    height: 50px;
  }
  
  .quizOption {
    padding: 0.75rem;
  }
  
  .codeBlockContainer {
    font-size: 0.8rem;
  }
  
  .lineNumber {
    width: 2.5rem;
  }
}

@media (max-width: 480px) {
  .mainGallery {
    flex-direction: column;
  }
  
  .galleryNav {
    transform: rotate(90deg);
  }
}