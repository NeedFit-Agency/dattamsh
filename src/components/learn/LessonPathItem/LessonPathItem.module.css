.pathItem {
    position: relative;
    width: 110px; /* Increased from 85px */
    height: 110px; /* Increased from 85px */
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s cubic
}

.leftPosition {
    right: auto;
    left: -250px; /* Adjusted for smaller chapter name width */
    top: 25px; /* Adjusted vertical position */
    text-align: right;
}

.rightPosition {
    right: -250px; /* Adjusted for smaller chapter name width */
    left: auto;
    top: 25px; /* Adjusted vertical position */
    text-align: left;
}

.pathItem::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    border-radius: 50%;
    z-index: -1;
    animation: glowPulse 2s ease-in-out infinite;
}

@keyframes glowPulse {
    0%, 100% { transform: scale(1); opacity: 0.5; }
    50% { transform: scale(1.05); opacity: 0.8; }
}

/* Level Badge */
.level-badge {
    background: linear-gradient(135deg, #4DB9FF, #1AA2FF);
    color: white;
    font-size: 42px; /* Increased from 32px */
    font-weight: 800;
    text-shadow: 0 3px 6px rgba(0, 0, 0, 0.3);
    box-shadow: 
        inset 0 -6px 0 rgba(0, 0, 0, 0.2),
        0 8px 16px rgba(0, 0, 0, 0.2),
        0 0 0 6px rgba(255, 255, 255, 0.6);
}

.level-badge::after {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(45deg, transparent 40%, rgba(255, 255, 255, 0.2) 45%, transparent 50%);
    border-radius: 50%;
    animation: shine 3s infinite;
}

@keyframes shine {
    0% { transform: translateX(-100%) rotate(45deg); }
    20%, 100% { transform: translateX(100%) rotate(45deg); }
}

/* robo Character */
.robo {
    /* background: linear-gradient(135deg, #4DB9FF, #1AA2FF); */
    /* border-radius: 50% 50% 45% 45%; */
    transform-origin: bottom;
    animation: bounce 2s ease-in-out infinite;
}

@keyframes bounce {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
}

.owlEye {
    background: white;
    border: 3px solid rgba(0, 0, 0, 0.2);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    animation: blink 4s infinite;
}

@keyframes blink {
    0%, 95%, 100% { transform: scaleY(1); }
    97.5% { transform: scaleY(0.1); }
}

/* Treasure Chest */
.chest {
    background: linear-gradient(135deg, #ffd700, #ffa500);
    border-radius: 15px;
    transform-origin: center;
    animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
}

.chestContent {
    background: linear-gradient(to bottom, #d4af37, #b8860b);
    border: 3px solid rgba(0, 0, 0, 0.2);
    box-shadow: 
        inset 0 2px 4px rgba(255, 255, 255, 0.3),
        0 2px 4px rgba(0, 0, 0, 0.2);
}

/* Hover Effects */
.pathItem:hover {
    transform: scale(1.1) rotate(5deg);
    box-shadow: 
        inset 0 -4px 0 rgba(0, 0, 0, 0.2),
        0 8px 16px rgba(0, 0, 0, 0.2),
        0 0 0 6px rgba(255, 255, 255, 0.6);
}

.pathItem:active {
    transform: scale(0.95);
    box-shadow: 
        inset 0 -2px 0 rgba(0, 0, 0, 0.2),
        0 2px 4px rgba(0, 0, 0, 0.1),
        0 0 0 4px rgba(255, 255, 255, 0.5);
}

/* --- Specific Item Type Styles --- */

/* Checkmark */
.checkmark {
    /* Default (incomplete/locked state, if any) */
    background-color: #e5e5e5; /* Keep gray */
    color: #cccccc;
    cursor: default;
    /* Apply specific shadows for gray state */
     box-shadow: inset 0 3px 2px rgba(255, 255, 255, 0.3),
                 0 5px 0 0 #ababab, /* Dark gray edge */
                 0 8px 10px -2px rgba(0, 0, 0, 0.15);
}
.checkmark .icon {
    font-size: 34px;
    /* Add a subtle text shadow to the icon for depth */
     text-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
}
/* COMPLETED Checkmark Styling */
.checkmark.completed {
    background-color: #84c400; /* Brighter, more accurate green */
    color: white;
    /* Apply specific green shadows */
     box-shadow: inset 0 3px 2px rgba(255, 255, 255, 0.25),
                 0 5px 0 0 #58a700, /* Dark green edge */
                 0 8px 10px -2px rgba(0, 0, 0, 0.2);
}
/* Override active state for non-clickable checkmarks */
.checkmark:active {
    transform: none; filter: none;
    /* Restore original shadow based on completed state */
}
.checkmark.completed:active {
     box-shadow: inset 0 3px 2px rgba(255, 255, 255, 0.25),
                 0 5px 0 0 #58a700,
                 0 8px 10px -2px rgba(0, 0, 0, 0.2);
}
.checkmark:not(.completed):active {
     box-shadow: inset 0 3px 2px rgba(255, 255, 255, 0.3),
                 0 5px 0 0 #ababab,
                 0 8px 10px -2px rgba(0, 0, 0, 0.15);
}

/* Keep .chestContent styles */
.chestContent { width: 55%; height: 65%; background-color: #bbbbbb; border-radius: 5px; position: relative; border: 2px solid #cecece; display: flex; align-items: center; justify-content: center; }
.chestContent::before { bottom: 6px; width: 9px; height: 11px; content: ''; position: absolute; left: 50%; transform: translateX(-50%); background-color: #888888; border-radius: 2px 2px 50% 50%; }
.chestContent::after { top: 7px; width: 14px; height: 7px; content: ''; position: absolute; left: 50%; transform: translateX(-50%); background-color: #888888; border-radius: 50%; }

/* Keep .owlBody, .owlEye, .owlBeak styles */
.owlBody { position: relative; width: 100%; height: 100%; }
.owlEye { position: absolute; top: 30%; width: 21px; height: 21px; background-color: white; border-radius: 50%; border: 2px solid #58a700; /* Darker outline */ }
.owlEye::after { width: 9px; height: 9px; content: ''; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: #333; border-radius: 50%; }
.owlEye.left { left: 22%; }
.owlEye.right { right: 22%; }
.owlBeak { position: absolute; bottom: 20%; left: 50%; transform: translateX(-50%); width: 0; height: 0; border-left: 9px solid transparent; border-right: 9px solid transparent; border-top: 14px solid #ffb000; border-radius: 3px; }

/* Remove owl-related styles */
.mascotContainer {
  position: relative;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  overflow: hidden;
}

.mascotContainer.animate {
  animation: mascotPop 0.45s cubic-bezier(0.34, 1.56, 0.64, 1);
  z-index: 2;
}

.mascotShadow {
  position: absolute;
  left: 50%;
  bottom: 10px;
  width: 50%;
  height: 14px;
  background: radial-gradient(ellipse at center, rgba(0,0,0,0.18) 60%, rgba(0,0,0,0) 100%);
  border-radius: 50%;
  transform: translateX(-50%) scale(1);
  pointer-events: none;
  z-index: 1;
  transition: filter 0.2s;
}

@keyframes mascotPop {
  0% { transform: scale(1); }
  40% { transform: scale(1.25); }
  60% { transform: scale(0.92); }
  80% { transform: scale(1.08); }
  100% { transform: scale(1); }
}

.sparkle {
  position: absolute;
  width: 18px;
  height: 18px;
  pointer-events: none;
  opacity: 0;
  z-index: 3;
  animation: sparklePop 0.6s ease-out;
}

@keyframes sparklePop {
  0% { opacity: 0; transform: scale(0.2) rotate(0deg); }
  20% { opacity: 1; transform: scale(1.1) rotate(20deg); }
  60% { opacity: 1; transform: scale(1) rotate(40deg); }
  100% { opacity: 0; transform: scale(0.2) rotate(60deg); }
}

.spin {
  animation: mascotSpin 0.7s cubic-bezier(0.34, 1.56, 0.64, 1);
}

@keyframes mascotSpin {
  0% { transform: rotate(0deg) scale(1); }
  60% { transform: rotate(360deg) scale(1.15); }
  100% { transform: rotate(360deg) scale(1); }
}

/* Item with chapter name label */
.itemWithLabel {
    position: relative;
    width: auto;
    height: auto;
    display: inline-block; /* Changed from flex to inline-block */
}

.chapterName {
    color: #2c3e50;
    font-size: 20px; /* Increased from 14px */
    font-weight: 800; /* Increased from 700 */
    text-align: center;
    background-color: rgba(255, 255, 255, 0.95);
    border-radius: 15px; /* Slightly increased for better proportion */
    padding: 12px 16px; /* Reduced horizontal padding to minimize spacing */
    min-width: auto; /* Remove fixed minimum width */
    max-width: 400px; /* Keep maximum width for very long names */
    width: auto; /* Auto width to fit content */
    white-space: normal; /* Allow wrapping when needed */
    overflow: hidden; /* Hide overflow */
    display: -webkit-box; /* Use flexbox for line clamping */
    -webkit-line-clamp: 2; /* Limit to maximum 2 lines */
    line-clamp: 2; /* Standard property for compatibility */
    -webkit-box-orient: vertical; /* Vertical orientation for line clamping */
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2); /* Enhanced shadow */
    border: 3px solid rgba(77, 185, 255, 0.3); /* Added blue border */
    transition: all 0.3s ease;
    position: absolute;
    z-index: 5;
    pointer-events: none; /* Ensure it doesn't interfere with clicking the badge */
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1); /* Added text shadow for better readability */
    line-height: 1.2; /* Better line spacing for wrapped text */
    min-height: 48px; /* Ensure consistent height for 1-2 lines */
    max-height: 72px; /* Maximum height for 2 lines */
}

.leftPosition {
    right: auto;
    left: -330px; /* Adjusted for larger chapter name width */
    top: 25px; /* Adjusted vertical position */
    text-align: right;
}

.rightPosition {
    right: -330px; /* Adjusted for larger chapter name width */
    left: auto;
    top: 25px; /* Adjusted vertical position */
    text-align: left;
}

.itemWithLabel:hover .chapterName {
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.25); /* Enhanced hover shadow */
    border-color: rgba(77, 185, 255, 0.8); /* More prominent blue border on hover */
    opacity: 1;
    transform: scale(1.05); /* Slight scale effect on hover */
}