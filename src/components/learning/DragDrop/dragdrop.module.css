.container {
  display: flex;
  flex-direction: column;
  width: 100vw;
  min-height: 100vh;
  left: 0;
  top: 0;
  position: absolute;
  margin: 0 auto;
  padding: 20px;
  font-family: var(--font-family, 'Nunito', sans-serif);
  background-image: url('/images/background/image-1.png');
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

.progressContainer {
  display: flex;
  align-items: center;
  margin-bottom: 20px;
}

.progressBar {
  flex-grow: 1;
  height: 8px;
  background-color: var(--background-medium, #e9ecef);
  border-radius: 4px;
  overflow: hidden;
  margin-right: 10px;
}

.progressFill {
  height: 100%;
  background-color: var(--primary, #1aa2ff);
  border-radius: 4px;
  transition: width 0.3s ease;
}

.progressText {
  font-size: 14px;
  color: var(--text-medium, #6c757d);
}

.title {
  font-size: 28px;
  font-weight: 700;
  color: var(--text-dark, #343a40);
  margin-bottom: 16px;
  text-align: center;
}

.instructionBox {
  background-color:#f8f9fa;
  border: 1px solid #bbddff;
  border-radius: 12px;
  padding: 30px;
  margin-top: 120px;
  margin-bottom: 24px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.instruction {
  font-size: 18px;
  color: var(--text-dark, #343a40);
  text-align: center;
  margin-bottom: 12px;
}

.audioButton {
  display: flex;
  align-items: center;
  gap: 8px;
  background-color: var(--primary, #1aa2ff);
  color: white;
  border: none;
  border-radius: 8px;
  padding: 8px 16px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  min-width: 120px;
  height: 44px;
  justify-content: center;
}

.audioButton:hover {
  background-color: var(--primary-dark, #0080e6);
  transform: translateY(-2px);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
}

.audioButton:active {
  transform: translateY(1px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.audioButtonPlaying {
  background-color: var(--success-green, #28a745);
}

.audioButtonPlaying:hover {
  background-color: #218838;
}

.buttonGroup {
  display: flex;
  align-items: center;
  gap: 12px;
  justify-content: space-between;
}

.leftButtons {
  display: flex;
  align-items: center;
  gap: 12px;
}

.resetButton {
  display: flex;
  align-items: center;
  gap: 8px;
  background-color: var(--warning, #ffc107);
  color: #212529;
  border: none;
  border-radius: 8px;
  padding: 8px 16px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  min-width: 120px;
  height: 44px;
  justify-content: center;
}

.resetButton:hover {
  background-color: #e0a800;
  transform: translateY(-1px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.15);
}

.activityArea {
  display: flex;
  flex-direction: row;
  gap: 24px;
  margin-bottom: 24px;
  background: rgba(255, 255, 255, 0.85);
  border-radius: 16px;
  box-shadow: 0 4px 24px rgba(0,0,0,0.08);
  padding: 20px;
  align-items: flex-start;
}

.itemsContainer {
  background-color: #f8f9fa;
  border: 1px solid #bbddff;
  border-radius: 12px;
  padding: 10px;
  flex: 1;
  margin-right: 10px;
}

.itemsTitle {
  font-size: 18px;
  font-weight: 600;
  color: var(--text-dark, #343a40);
  margin-bottom: 12px;
  text-align: center;
}

.dragItems {
  margin-top: 40px;
  display: flex;
  flex-wrap: wrap;
  gap: 50px;
  justify-content: center;
}

.dragItem {
  background-color: white;
  border: 2px solid #bbddff;
  border-radius: 10px; /* Increased border radius */
  padding: 24px 24px; /* Increased padding */
  min-width: 200px; /* Increased minimum width for vertical layout */
  cursor: grab;
  display: flex;
  flex-direction: column; /* Changed to column layout */
  align-items: center;
  gap: 16px; /* Increased gap between image and text */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: transform 0.2s cubic-bezier(0.22, 1, 0.36, 1), box-shadow 0.2s;
  touch-action: none;
  user-select: none;
}

.dragItem:hover {
  transform: translateY(-3px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

.dragItemImage {
  width: 220px; /* Increased to 220px for bigger images */
  height: 220px; /* Increased to 220px for bigger images */
  overflow: hidden;
  border-radius: 8px; /* Increased border radius */
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 8px; /* Add margin below image */
  transition: width 0.3s ease, height 0.3s ease; /* Smooth transitions for responsive changes */
}

.dragItemImage img {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.dragItemText {
  font-size: 16px; /* Adjusted for better fit in vertical layout */
  font-weight: 600; /* Increased font weight */
  color: var(--text-dark, #343a40);
  text-align: center; /* Center align text */
  line-height: 1.4; /* Better line height for readability */
  max-width: 200px; /* Limit text width for better layout */
}

.targetsGrid {
  display: grid;
  flex: 2;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 20px;
  align-items: start;
  width: 100%;
}

/* Optimize for exactly 4 targets - ensure 2x2 grid layout */
.targetsGrid:has(.targetContainer:nth-child(4):last-child) {
  grid-template-columns: repeat(2, 1fr);
  max-width: 1200px;
  margin: 0 auto;
  gap: 24px;
}

/* Ensure targets don't get too wide on large screens */
.targetsGrid:has(.targetContainer:nth-child(3)) {
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
}

.targetsGrid:has(.targetContainer:nth-child(5)) {
  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
}

.targetContainer {
  display: flex;
  flex-direction: column;
}

.targetTitle {
  font-size: 20px; /* Increased from 18px */
  font-weight: 700; /* Increased font weight */
  color: var(--text-dark, #343a40);
  margin-bottom: 15px; /* Increased margin */
  text-align: center;
}

.dropTarget {
  min-width: 320px; /* Reduced from 380px for better fit */
  max-width: 500px; /* Reduced from 580px for better fit */
  width: 100%;
  height: 100%;
  min-height: 240px; /* Reduced from 280px for better fit */
  max-height: 400px; /* Reduced from 480px for better fit */
  height: 300px; /* Reduced from 360px for better fit */
  background-color: #bbddff;
  border: 2px dashed #adb5bd;
  border-radius: 12px;
  padding: 16px; /* Reduced from 20px for better fit */
  display: flex;
  flex-direction: row; /* Changed to row for horizontal layout */
  flex-wrap: wrap; /* Enable wrapping to next line when items are too big */
  gap: 8px; /* Reduced gap for tighter packing */
  align-content: flex-start; /* Start from top when wrapping */
  justify-content: flex-start; /* Start from left */
  transition: border-color 0.2s, background-color 0.2s;
  box-sizing: border-box;
  overflow-y: auto; /* Allow vertical scrolling if needed */
}

.dropTarget:hover {
  border-color: var(--primary, #1aa2ff);
  background-color: rgba(26, 162, 255, 0.05);
}

.droppedItem {
  background-color: white;
  border: 2px solid var(--border-medium, #adb5bd);
  border-radius: 8px;
  padding: 6px 10px; /* Reduced padding to fit more content */
  display: flex;
  flex-direction: row; /* Horizontal layout: image left, text right */
  align-items: center; /* Center items vertically */
  justify-content: center; /* Changed from flex-start to center for horizontal centering */
  gap: 16px; /* Increased gap from 8px to 16px for better spacing */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  cursor: pointer;
  position: relative;
  transition: transform 0.2s cubic-bezier(0.22, 1, 0.36, 1), box-shadow 0.2s;
  touch-action: none;
  user-select: none;
  /* Smaller sizing to fit within dropbox */
  min-height: 40px; /* Reduced height */
  max-height: 50px; /* Reduced maximum height */
  width: calc(50% - 4px); /* Fit 2 items per line */
  min-width: 100px; /* Reduced minimum width */
  max-width: 160px; /* Reduced maximum width */
  flex-shrink: 0; /* Prevent shrinking */
  flex-grow: 0; /* Prevent growing */
  /* Ensure content stays within boundaries */
  overflow: hidden; /* Hide overflow content */
  box-sizing: border-box; /* Include padding in size calculations */
  text-align: center; /* Changed from left to center for text alignment */
  /* Enable wrapping when needed */
  flex-basis: auto; /* Allow natural sizing */
}

.droppedItem:hover {
  transform: scale(1.02);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

.droppedItemImage {
  width: 24px; /* Reduced from 36px to fit smaller box */
  height: 24px; /* Reduced from 36px to fit smaller box */
  object-fit: contain;
  flex-shrink: 0; /* Prevent image from shrinking */
  margin-right: 0; /* No right margin needed */
  border-radius: 4px; /* Reduced border radius */
}

.droppedItemText {
  color: var(--text-primary, #212529);
  font-size: 12px; /* Reduced from 15px to fit smaller box */
  font-weight: 600;
  flex-grow: 1; /* Allow text to take remaining space */
  white-space: nowrap; /* Prevent text wrapping within item */
  overflow: hidden; /* Hide overflow text */
  text-overflow: ellipsis; /* Show ellipsis for long text */
  line-height: 1.2; /* Tighter line height */
  text-align: center; /* Changed from left to center for text alignment */
  max-width: 100%; /* Ensure text doesn't exceed container */
}

.activityControls {
  display: flex;
  justify-content: center;
  gap: 16px;
  margin-bottom: 24px;
}

.checkButton {
  background-color: #3b82f6;
  color: white;
  border: none;
  border-radius: 12px;
  padding: 15px 35px;
  font-weight: bold;
  font-size: var(--font-size-sm);
  cursor: pointer;
  transition: all 0.2s;
  box-shadow: 0 4px 0 #2563eb;
  text-transform: uppercase;
  letter-spacing: 0.8px;
}

.checkButton:hover:not(:disabled) {
  background-color: #60a5fa;
  transform: translateY(-2px);
}

.checkButton:active:not(:disabled) {
  transform: translateY(2px);
  box-shadow: 0 2px 0 #2563eb;
}

.checkButton:disabled {
  background-color: #e5e5e5;
  color: #aaaaaa;
  cursor: not-allowed;
  box-shadow: 0 4px 0 #c5c5c5;
}

.resetButton {
  background-color: #fff;
  color: #3b82f6;
  border: 2px solid #3b82f6;
  border-radius: 12px;
  padding: 15px 35px;
  font-size: var(--font-size-sm);
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 0.8px;
  display: flex;
  align-items: center;
  gap: 8px;
  transition: all 0.2s;
  box-shadow: 0 4px 0 #2563eb;
}

.resetButton:hover:not(:disabled) {
  background-color: #e5eeff;
  color: #2563eb;
  border-color: #2563eb;
  transform: translateY(-2px);
  box-shadow: 0 4px 0 #2563eb;
}

.resetButton:active:not(:disabled) {
  transform: translateY(2px);
  box-shadow: 0 2px 0 #2563eb;
}

.resetButton:disabled {
  background-color: #e5e5e5;
  color: #aaaaaa;
  border-color: #e5e5e5;
  cursor: not-allowed;
  box-shadow: 0 4px 0 #c5c5c5;
}

.feedbackMessage {
  position: fixed; /* Changed to fixed positioning for center screen display */
  top: 40%; /* Positioned slightly higher than center for better visibility */
  left: 50%; /* Center horizontally */
  transform: translate(-50%, -50%); /* Perfect centering - this stays consistent */
  min-height: 50px; /* Increased for longer error messages */
  max-width: 90vw; /* Responsive width */
  width: auto; /* Auto width based on content */
  font-size: 1.2rem; /* Slightly smaller for longer text */
  font-weight: 700;
  transition: none; /* Remove transition to prevent conflicts with animation */
  padding: 16px 24px; /* Increased padding for better visibility */
  border-radius: 15px; /* More rounded for modern look */
  font-family: "Comic Sans MS", "Comic Sans", Nunito, cursive, sans-serif;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  line-height: 1.3; /* Better line spacing */
  z-index: 999; /* Lower than congratulations screen but higher than game content */
  margin: 0; /* Remove margin since we're using fixed positioning */
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2); /* Enhanced shadow for popup effect */
  opacity: 1;
  visibility: visible;
}

.correctFeedback {
  color: #218838;
  background-color: #e6f9ed;
  border: 3px solid var(--success-color, #4CAF50); /* Thicker border for visibility */
  animation: smoothPopIn 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
  box-shadow: 0 8px 32px rgba(76, 175, 80, 0.3); /* Green shadow */
}

.incorrectFeedback {
  color: #c62828; /* Darker red for better readability */
  background-color: #ffebee; /* Softer background */
  border: 3px solid #ef5350; /* Thicker, softer border color */
  animation: smoothPopIn 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
  box-shadow: 0 8px 32px rgba(239, 83, 80, 0.3); /* Red shadow for popup effect */
}

.navigationFooter {
  position: absolute;
  left: 0;
  bottom: -20px;
  width: 100vw;
  background: #fff;
  box-shadow: none;
  z-index: 20;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 24px 0 32px 0;
}

.navigationButton {
  background-color: #3b82f6;
  color: white;
  border: none;
  border-radius: 12px;
  padding: 15px 20px;
  font-weight: bold;
  font-size: var(--font-size-sm);
  cursor: pointer;
  transition: all 0.2s;
  box-shadow: 0 4px 0 #2563eb;
  text-transform: uppercase;
  letter-spacing: 0.8px;
  min-width: 100px;
  min-height: 20px;
  margin: 0 40px;
  display: flex;
  align-items: center;
  gap: 12px;
}

.navigationButton:hover:not(:disabled) {
  background-color: #60a5fa;
  color: white;
  transform: translateY(-2px);
  box-shadow: 0 4px 0 #2563eb;
}

.navigationButton:active:not(:disabled) {
  transform: translateY(2px);
  box-shadow: 0 2px 0 #2563eb;
}

.navigationButton:disabled {
  background-color: #e5e5e5;
  color: #aaaaaa;
  cursor: not-allowed;
  box-shadow: 0 4px 0 #c5c5c5;
}

.continueButton {
  background: #4ecb6e;
  color: #fff;
  box-shadow: 0 2px 12px rgba(78,203,110,0.15);
}

.continueButton:hover:not(:disabled), .enabledButton:hover {
  background: #38b85d;
  color: #fff;
  box-shadow: 0 4px 16px rgba(56,184,93,0.18);
}

.enabledButton {
  background: #4ecb6e;
  color: #fff;
}

.disabledButton {
  background: #fff8e1;
  color: #d1bfa7;
  cursor: not-allowed;
  box-shadow: none;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes smoothPopIn {
  0% {
    transform: translate(-50%, -50%) scale(0.5);
    opacity: 0;
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
  }
}

/* Large screens - optimize for multiple columns */
@media (min-width: 1200px) {
  .targetsGrid {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 24px;
  }
  .dropTarget {
    min-width: 300px;
  }
  
  /* Special handling for 4 targets - ensure 2x2 grid */
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) {
    grid-template-columns: repeat(2, 1fr);
    max-width: 1200px;
    margin: 0 auto;
    gap: 32px;
  }
}

/* Medium-large screens - optimize for 4 targets */
@media (min-width: 900px) and (max-width: 1199px) {
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) {
    grid-template-columns: repeat(2, 1fr);
    max-width: 900px;
    margin: 0 auto;
    gap: 20px;
  }
  
  .dropTarget {
    min-width: 280px;
    min-height: 200px;
    height: 250px;
  }
}

/* Prevent overflow on medium screens while keeping original design */
@media (max-width: 1100px) and (min-width: 901px) {
  .activityArea {
    overflow-x: auto;
  }
  .targetsGrid {
    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
    gap: 18px;
  }
  .dropTarget {
    min-width: 260px;
  }
}

@media (max-width: 900px) {
  .activityArea {
    flex-direction: column;
    gap: 16px;
  }
  .itemsContainer {
    margin-right: 0;
    margin-bottom: 16px;
  }
  
  .dragItem {
    min-width: 180px; /* Adjusted for medium screens */
    padding: 20px 20px;
  }
  
  .dragItemImage {
    width: 160px; /* Medium size for tablets */
    height: 160px;
  }
  
  .targetsGrid {
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 16px;
  }
  
  /* Optimize 4 targets for medium screens */
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) {
    grid-template-columns: repeat(2, 1fr);
    max-width: 600px;
    margin: 0 auto;
    gap: 16px;
  }
  
  .dropTarget {
    min-width: 160px;
    max-width: 100%;
    width: 100%;
    min-height: 120px;
    max-height: 180px;
    height: 140px;
  }
}

/* Mobile-first responsive design */
@media (max-width: 768px) {
  .container {
    padding: 6px;
    padding-top: 80px; /* Increased top padding to clear header */
    min-height: 100vh;
    overflow-x: hidden;
    position: relative;
    top: 0;
  }

  .title {
    font-size: 18px;
    margin-bottom: 6px;
  }

  .instructionBox {
    padding: 12px;
    margin-top: 6px;
    margin-bottom: 12px;
  }

  .instruction {
    font-size: 15px;
    margin-bottom: 8px;
  }

  .buttonGroup {
    flex-direction: row;
    gap: 10px;
    width: 100%;
    justify-content: center;
  }

  .leftButtons {
    width: auto;
  }

  .audioButton,
  .resetButton {
    width: auto;
    min-width: 100px;
    height: 40px;
    font-size: 13px;
    padding: 8px 12px;
    touch-action: manipulation;
  }

  .activityArea {
    flex-direction: column;
    gap: 16px;
    padding: 16px;
    margin-bottom: 12px;
    min-height: calc(100vh - 280px); /* Adjusted for header space */
    background: rgba(255, 255, 255, 0.9);
    border-radius: 20px;
    box-shadow: 0 8px 32px rgba(0,0,0,0.12);
  }

  /* Enhanced Items Container - Now positioned prominently at top */
  .itemsContainer {
    margin-right: 0;
    margin-bottom: 0;
    padding: 16px;
    min-height: 140px;
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    border: 2px solid #bbddff;
    border-radius: 16px;
    box-shadow: 0 4px 16px rgba(0,0,0,0.08);
    order: 1; /* Ensure items appear first */
  }

  .itemsTitle {
    font-size: 18px;
    margin-bottom: 12px;
    color: #2c3e50;
    font-weight: 700;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .dragItems {
    margin-top: 12px;
    gap: 12px;
    justify-content: center;
    min-height: 120px;
    display: flex;
    align-items: flex-start;
    flex-wrap: wrap;
    padding: 8px;
  }

  .dragItem {
    min-width: 140px;
    padding: 20px 16px;
    gap: 12px;
    touch-action: manipulation;
    cursor: grab;
    flex-direction: column;
    text-align: center;
    background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
    border: 3px solid #bbddff;
    border-radius: 16px;
    box-shadow: 0 6px 20px rgba(0,0,0,0.1);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
  }

  .dragItem::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #1aa2ff, #28a745);
    border-radius: 16px 16px 0 0;
  }

  .dragItem:active {
    cursor: grabbing;
    transform: scale(0.92) translateY(2px);
    box-shadow: 0 2px 8px rgba(0,0,0,0.15);
  }

  .dragItemImage {
    width: 90px;
    height: 90px;
    margin-bottom: 8px;
    border-radius: 6px;
  }

  .dragItemText {
    font-size: 16px;
    font-weight: 700;
    color: #2c3e50;
    text-shadow: 0 1px 2px rgba(0,0,0,0.1);
  }

  /* Enhanced Targets Grid - Now positioned below items */
  .targetsGrid {
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: 16px;
    flex: 1;
    order: 2; /* Ensure targets appear after items */
  }
  
  /* Optimize 4 targets for mobile screens */
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) {
    grid-template-columns: repeat(2, 1fr);
    max-width: 400px;
    margin: 0 auto;
    gap: 12px;
  }

  .targetContainer {
    background: rgba(255, 255, 255, 0.8);
    border-radius: 16px;
    padding: 16px;
    box-shadow: 0 4px 16px rgba(0,0,0,0.08);
    border: 2px solid #e9ecef;
  }

  .targetTitle {
    font-size: 20px;
    margin-bottom: 12px;
    color: #2c3e50;
    font-weight: 700;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .dropTarget {
    min-width: auto;
    max-width: 100%;
    width: 100%;
    min-height: 120px; /* Reduced for better fit */
    max-height: 160px; /* Reduced for better fit */
    height: 140px; /* Reduced for better fit */
    padding: 12px; /* Reduced padding for better fit */
    gap: 8px; /* Reduced gap for better fit */
    touch-action: manipulation;
    background: linear-gradient(135deg, #f8f9fa 0%, #e3f2fd 100%);
    border: 3px dashed #bbddff;
    border-radius: 16px;
    transition: all 0.3s ease;
    display: flex;
    flex-direction: row; /* Maintain horizontal layout */
    flex-wrap: wrap; /* Enable wrapping for mobile */
    align-content: flex-start; /* Start from top when wrapping */
    justify-content: flex-start; /* Start from left */
    /* Ensure content can wrap properly */
    overflow: visible; /* Allow content to be visible */
  }

  .dropTarget:hover {
    background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
    border-color: #1aa2ff;
    transform: translateY(-1px);
    box-shadow: 0 4px 16px rgba(26, 162, 255, 0.2);
  }

  .dropTarget.touchActive {
    background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%);
    border-color: #28a745;
    transform: scale(1.01);
    box-shadow: 0 4px 16px rgba(40, 167, 69, 0.3);
  }

  .droppedItem {
    padding: 8px 12px; /* Reduced padding for better fit */
    gap: 6px; /* Reduced gap for better fit */
    touch-action: manipulation;
    min-height: 40px; /* Reduced height for better fit */
    max-height: 40px; /* Fixed height for consistency */
    width: calc(50% - 4px); /* Fit 2 items per line */
    min-width: 100px; /* Minimum width for mobile */
    max-width: 150px; /* Maximum width for mobile */
    background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
    border: 2px solid #bbddff;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    transition: all 0.2s ease;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: row; /* Horizontal layout */
    text-align: center;
    /* Ensure items fit in one line */
    flex-wrap: nowrap;
    overflow: hidden;
    flex-shrink: 0;
    flex-grow: 0;
  }

  .droppedItem:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 16px rgba(0,0,0,0.12);
  }

  .droppedItem:active {
    transform: scale(0.95);
  }

  .droppedItemImage {
    width: 24px; /* Reduced from 36px to fit smaller box */
    height: 24px; /* Reduced from 36px to fit smaller box */
    object-fit: contain;
    flex-shrink: 0; /* Prevent image from shrinking */
    margin-right: 0; /* No right margin needed */
    border-radius: 4px; /* Reduced border radius */
  }

  .droppedItemText {
    color: var(--text-primary, #212529);
    font-size: 12px; /* Reduced from 15px to fit smaller box */
    font-weight: 600;
    flex-grow: 1; /* Allow text to take remaining space */
    white-space: nowrap; /* Prevent text wrapping within item */
    overflow: hidden; /* Hide overflow text */
    text-overflow: ellipsis; /* Show ellipsis for long text */
    line-height: 1.2; /* Tighter line height */
    text-align: center; /* Changed from left to center for text alignment */
    max-width: 100%; /* Ensure text doesn't exceed container */
  }

  .feedbackMessage {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    min-height: 50px;
    max-width: 85vw;
    width: auto;
    font-size: 15px;
    padding: 16px;
    border-radius: 12px;
  }

  .progressContainer {
    margin-bottom: 6px;
  }

  .progressText {
    font-size: 12px;
  }
}

/* Small mobile devices */
@media (max-width: 480px) {
  .container {
    padding: 4px;
    padding-top: 70px; /* Adjusted for smaller screens */
  }

  .title {
    font-size: 16px;
    margin-bottom: 4px;
  }

  .instruction {
    font-size: 14px;
    margin-bottom: 6px;
  }

  .instructionBox {
    padding: 10px;
    margin-top: 4px;
    margin-bottom: 8px;
  }

  .buttonGroup {
    gap: 8px;
  }

  .audioButton,
  .resetButton {
    min-width: 90px;
    height: 36px;
    font-size: 12px;
    padding: 6px 10px;
  }

  .activityArea {
    gap: 12px;
    padding: 12px;
    margin-bottom: 8px;
    border-radius: 16px;
    min-height: calc(100vh - 240px); /* Adjusted for header space */
  }

  .itemsContainer {
    margin-bottom: 8px;
    padding: 12px;
    min-height: 100px;
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    border: 2px solid #bbddff;
    border-radius: 12px;
    box-shadow: 0 3px 12px rgba(0,0,0,0.08);
  }

  .itemsTitle {
    font-size: 16px;
    margin-bottom: 8px;
    color: #2c3e50;
    font-weight: 700;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 0.3px;
  }

  .dragItems {
    margin-top: 8px;
    gap: 10px;
    min-height: 60px;
    justify-content: center;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
  }

  .dragItem {
    min-width: 120px;
    padding: 16px 12px;
    gap: 8px;
    background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
    border: 2px solid #bbddff;
    border-radius: 12px;
    box-shadow: 0 4px 16px rgba(0,0,0,0.1);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
    flex-direction: column;
    text-align: center;
  }

  .dragItem::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, #1aa2ff, #28a745);
    border-radius: 12px 12px 0 0;
  }

  .dragItem:active {
    transform: scale(0.92) translateY(2px);
    box-shadow: 0 2px 8px rgba(0,0,0,0.15);
  }

  .dragItemImage {
    width: 70px;
    height: 70px;
    margin-bottom: 6px;
  }

  .dragItemText {
    font-size: 14px;
    font-weight: 700;
    color: #2c3e50;
  }

  .targetsGrid {
    gap: 10px;
  }
  
  /* Optimize 4 targets for small mobile screens */
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) {
    grid-template-columns: repeat(2, 1fr);
    max-width: 320px;
    margin: 0 auto;
    gap: 8px;
  }

  .targetContainer {
    background: rgba(255, 255, 255, 0.8);
    border-radius: 12px;
    padding: 12px;
    box-shadow: 0 3px 12px rgba(0,0,0,0.08);
    border: 2px solid #e9ecef;
  }

  .targetTitle {
    font-size: 18px;
    margin-bottom: 8px;
    color: #2c3e50;
    font-weight: 700;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 0.3px;
  }

  .dropTarget {
    min-height: 100px; /* Reduced for better fit */
    max-height: 140px; /* Reduced for better fit */
    height: 120px; /* Reduced for better fit */
    padding: 10px; /* Reduced padding for better fit */
    gap: 6px; /* Reduced gap for better fit */
    background: linear-gradient(135deg, #f8f9fa 0%, #e3f2fd 100%);
    border: 3px dashed #bbddff;
    border-radius: 12px;
    transition: all 0.3s ease;
    display: flex;
    flex-direction: row; /* Maintain horizontal layout */
    flex-wrap: wrap; /* Allow wrapping */
    align-content: flex-start;
    justify-content: flex-start;
  }

  .droppedItem {
    padding: 6px 10px; /* Reduced padding for better fit */
    gap: 4px; /* Reduced gap for better fit */
    min-height: 36px; /* Reduced height for better fit */
    max-height: 36px; /* Fixed height for consistency */
    width: calc(50% - 3px); /* Fit 2 items per line with smaller gap */
    min-width: 80px; /* Minimum width for small mobile */
    max-width: 120px; /* Maximum width for small mobile */
    background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
    border: 2px solid #bbddff;
    border-radius: 10px;
    box-shadow: 0 3px 10px rgba(0,0,0,0.08);
    transition: all 0.2s ease;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: row; /* Horizontal layout */
    text-align: center;
    /* Ensure items fit in one line */
    flex-wrap: nowrap;
    overflow: hidden;
    flex-shrink: 0;
    flex-grow: 0;
  }

  .droppedItem:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.12);
  }

  .droppedItem:active {
    transform: scale(0.95);
  }

  .droppedItemImage {
    width: 24px; /* Reduced from 36px to fit smaller box */
    height: 24px; /* Reduced from 36px to fit smaller box */
    object-fit: contain;
    flex-shrink: 0; /* Prevent image from shrinking */
    margin-right: 0; /* No right margin needed */
    border-radius: 4px; /* Reduced border radius */
  }

  .droppedItemText {
    color: var(--text-primary, #212529);
    font-size: 12px; /* Reduced from 15px to fit smaller box */
    font-weight: 600;
    flex-grow: 1; /* Allow text to take remaining space */
    white-space: nowrap; /* Prevent text wrapping within item */
    overflow: hidden; /* Hide overflow text */
    text-overflow: ellipsis; /* Show ellipsis for long text */
    line-height: 1.2; /* Tighter line height */
    text-align: center; /* Changed from left to center for text alignment */
    max-width: 100%; /* Ensure text doesn't exceed container */
  }

  .feedbackMessage {
    font-size: 14px;
    padding: 12px;
    min-height: 45px;
  }
}

/* Extra small devices */
@media (max-width: 360px) {
  .container {
    padding: 3px;
    padding-top: 60px; /* Adjusted for very small screens */
  }

  .title {
    font-size: 14px;
    margin-bottom: 3px;
  }

  .instruction {
    font-size: 13px;
    margin-bottom: 4px;
  }

  .instructionBox {
    padding: 8px;
    margin-top: 3px;
    margin-bottom: 6px;
  }

  .buttonGroup {
    gap: 6px;
  }

  .audioButton,
  .resetButton {
    min-width: 80px;
    height: 32px;
    font-size: 11px;
    padding: 4px 8px;
  }

  .activityArea {
    gap: 6px;
    padding: 6px;
    margin-bottom: 6px;
    min-height: calc(100vh - 200px); /* Adjusted for header space */
  }

  .itemsContainer {
    margin-bottom: 6px;
    padding: 8px;
    min-height: 80px;
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    border: 2px solid #bbddff;
    border-radius: 10px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.08);
  }

  .itemsTitle {
    font-size: 15px;
    margin-bottom: 6px;
    color: #2c3e50;
    font-weight: 700;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 0.2px;
  }

  .dragItems {
    margin-top: 6px;
    gap: 8px;
    min-height: 50px;
    justify-content: center;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
  }

  .dragItem {
    min-width: 100px;
    padding: 12px 8px;
    gap: 6px;
    background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
    border: 2px solid #bbddff;
    border-radius: 10px;
    box-shadow: 0 3px 12px rgba(0,0,0,0.1);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
    flex-direction: column;
    text-align: center;
  }

  .dragItem::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, #1aa2ff, #28a745);
    border-radius: 10px 10px 0 0;
  }

  .dragItem:active {
    transform: scale(0.92) translateY(1px);
    box-shadow: 0 2px 6px rgba(0,0,0,0.15);
  }

  .dragItemImage {
    width: 60px;
    height: 60px;
    margin-bottom: 4px;
  }

  .dragItemText {
    font-size: 13px;
    font-weight: 700;
    color: #2c3e50;
  }

  .targetsGrid {
    gap: 8px;
  }
  
  /* Optimize 4 targets for extra small screens */
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) {
    grid-template-columns: repeat(2, 1fr);
    max-width: 280px;
    margin: 0 auto;
    gap: 6px;
  }

  .targetContainer {
    background: rgba(255, 255, 255, 0.8);
    border-radius: 10px;
    padding: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.08);
    border: 2px solid #e9ecef;
  }

  .targetTitle {
    font-size: 15px;
    margin-bottom: 6px;
    color: #2c3e50;
    font-weight: 700;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 0.2px;
  }

  .dropTarget {
    min-height: 80px; /* Reduced for better fit */
    max-height: 120px; /* Reduced for better fit */
    height: 100px; /* Reduced for better fit */
    padding: 8px; /* Reduced padding for better fit */
    gap: 4px; /* Reduced gap for better fit */
    background: linear-gradient(135deg, #f8f9fa 0%, #e3f2fd 100%);
    border: 2px dashed #bbddff;
    border-radius: 10px;
    transition: all 0.3s ease;
    display: flex;
    flex-direction: row; /* Maintain horizontal layout */
    flex-wrap: wrap; /* Allow wrapping */
    align-content: flex-start;
    justify-content: flex-start;
  }

  .droppedItem {
    padding: 4px 8px; /* Reduced padding for better fit */
    gap: 3px; /* Reduced gap for better fit */
    min-height: 32px; /* Reduced height for better fit */
    max-height: 32px; /* Fixed height for consistency */
    width: calc(50% - 2px); /* Fit 2 items per line with minimal gap */
    min-width: 60px; /* Minimum width for extra small mobile */
    max-width: 100px; /* Maximum width for extra small mobile */
    background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
    border: 2px solid #bbddff;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.08);
    transition: all 0.2s ease;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: row; /* Horizontal layout */
    text-align: center;
    /* Ensure items fit in one line */
    flex-wrap: nowrap;
    overflow: hidden;
    flex-shrink: 0;
    flex-grow: 0;
  }

  .droppedItem:hover {
    transform: translateY(-1px);
    box-shadow: 0 3px 10px rgba(0,0,0,0.12);
  }

  .droppedItem:active {
    transform: scale(0.95);
  }

  .droppedItemImage {
    width: 24px; /* Reduced from 36px to fit smaller box */
    height: 24px; /* Reduced from 36px to fit smaller box */
    object-fit: contain;
    flex-shrink: 0; /* Prevent image from shrinking */
    margin-right: 0; /* No right margin needed */
    border-radius: 4px; /* Reduced border radius */
  }

  .droppedItemText {
    color: var(--text-primary, #212529);
    font-size: 12px; /* Reduced from 15px to fit smaller box */
    font-weight: 600;
    flex-grow: 1; /* Allow text to take remaining space */
    white-space: nowrap; /* Prevent text wrapping within item */
    overflow: hidden; /* Hide overflow text */
    text-overflow: ellipsis; /* Show ellipsis for long text */
    line-height: 1.2; /* Tighter line height */
    text-align: center; /* Changed from left to center for text alignment */
    max-width: 100%; /* Ensure text doesn't exceed container */
  }

  .feedbackMessage {
    font-size: 13px;
    padding: 10px;
    min-height: 40px;
  }
}

/* Landscape orientation on mobile */
@media (max-width: 768px) and (orientation: landscape) {
  .container {
    padding: 4px;
    padding-top: 50px; /* Adjusted for landscape header */
  }

  .title {
    font-size: 14px;
    margin-bottom: 3px;
  }

  .instructionBox {
    padding: 6px;
    margin-top: 3px;
    margin-bottom: 4px;
  }

  .instruction {
    font-size: 12px;
    margin-bottom: 4px;
  }

  .buttonGroup {
    gap: 6px;
  }

  .audioButton,
  .resetButton {
    min-width: 70px;
    height: 28px;
    font-size: 11px;
    padding: 4px 8px;
  }

  .activityArea {
    flex-direction: row;
    gap: 6px;
    padding: 6px;
    margin-bottom: 4px;
    min-height: calc(100vh - 140px); /* Adjusted for landscape header */
  }

  .itemsContainer {
    flex: 0 0 30%;
    margin-right: 6px;
    margin-bottom: 0;
    padding: 4px;
    min-height: 60px;
  }

  .itemsTitle {
    font-size: 12px;
    margin-bottom: 4px;
  }

  .dragItems {
    margin-top: 4px;
    gap: 6px;
    min-height: 40px;
  }

  .dragItem {
    min-width: 60px;
    padding: 6px;
    gap: 4px;
    flex-direction: column;
  }

  .dragItemImage {
    width: 40px;
    height: 40px;
  }

  .dragItemText {
    font-size: 10px;
  }

  .targetsGrid {
    flex: 0 0 70%;
    grid-template-columns: repeat(2, 1fr); /* Force 2x2 grid for 4 targets */
    gap: 4px;
    max-width: 400px; /* Limit width for better fit */
    margin: 0 auto;
  }
  
  /* Optimize 4 targets for landscape mode */
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) {
    grid-template-columns: repeat(2, 1fr);
    max-width: 400px;
    margin: 0 auto;
    gap: 4px;
  }

  .targetTitle {
    font-size: 12px;
    margin-bottom: 4px;
  }

  .dropTarget {
    min-height: 60px;
    max-height: 80px;
    height: 70px;
    padding: 4px;
    gap: 4px;
    display: flex;
    flex-direction: row; /* Maintain horizontal layout */
    flex-wrap: wrap; /* Allow wrapping */
    align-content: flex-start;
    justify-content: flex-start;
  }

  .droppedItem {
    padding: 3px 4px;
    gap: 3px;
    min-height: 28px;
    max-height: 28px; /* Fixed height for consistency */
    width: calc(50% - 2px); /* Fit 2 items per line */
    min-width: 50px; /* Minimum width for landscape */
    max-width: 80px; /* Maximum width for landscape */
    flex-direction: row; /* Horizontal layout */
    /* Ensure items fit in one line */
    flex-wrap: nowrap;
    overflow: hidden;
    flex-shrink: 0;
    flex-grow: 0;
  }

  .droppedItem:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.12);
  }

  .droppedItem:active {
    transform: scale(0.95);
  }

  .droppedItemImage {
    width: 24px; /* Reduced from 36px to fit smaller box */
    height: 24px; /* Reduced from 36px to fit smaller box */
    object-fit: contain;
    flex-shrink: 0; /* Prevent image from shrinking */
    margin-right: 0; /* No right margin needed */
    border-radius: 4px; /* Reduced border radius */
  }

  .droppedItemText {
    color: var(--text-primary, #212529);
    font-size: 12px; /* Reduced from 15px to fit smaller box */
    font-weight: 600;
    flex-grow: 1; /* Allow text to take remaining space */
    white-space: nowrap; /* Prevent text wrapping within item */
    overflow: hidden; /* Hide overflow text */
    text-overflow: ellipsis; /* Show ellipsis for long text */
    line-height: 1.2; /* Tighter line height */
    text-align: center; /* Changed from left to center for text alignment */
    max-width: 100%; /* Ensure text doesn't exceed container */
  }

  .feedbackMessage {
    font-size: 12px;
    padding: 8px;
    min-height: 30px;
  }
}

/* Touch-friendly improvements for all mobile devices */
@media (hover: none) and (pointer: coarse) {
  .dragItem {
    cursor: grab;
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
  }

  .dragItem:active {
    cursor: grabbing;
    transform: scale(0.98);
  }

  .droppedItem {
    cursor: pointer;
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
  }

  .droppedItem:active {
    transform: scale(0.95);
  }

  .audioButton,
  .resetButton {
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
  }

  .audioButton:active,
  .resetButton:active {
    transform: scale(0.95);
  }
}

/* Touch feedback and visual indicators */
.dragItem {
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.dragItem:active {
  transform: scale(0.98);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
}

.droppedItem {
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.droppedItem:active {
  transform: scale(0.95);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

/* Touch feedback for buttons */
.audioButton:active,
.resetButton:active {
  transform: scale(0.95);
  transition: transform 0.1s ease;
}

/* Visual feedback for touch interactions */
.dropTarget {
  position: relative;
  transition: all 0.2s ease;
}

.dropTarget.touchActive {
  background-color: rgba(26, 162, 255, 0.1);
  border-color: var(--primary, #1aa2ff);
  transform: scale(1.02);
}

/* Touch drag visual feedback */
.dragItem.touchDragging {
  position: fixed;
  z-index: 1000;
  pointer-events: none;
  opacity: 0.8;
  transform: scale(1.1);
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
}

/* Mobile-specific touch improvements */
@media (max-width: 768px) {
  .dragItem {
    min-height: 44px; /* Minimum touch target size */
  }
  
  .droppedItem {
    min-height: 44px; /* Minimum touch target size */
  }
  
  .audioButton,
  .resetButton {
    min-height: 44px; /* Minimum touch target size */
  }
  
  /* Prevent text selection during touch */
  .dragItem,
  .droppedItem,
  .audioButton,
  .resetButton {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  
  /* Improved touch feedback */
  .dragItem:active {
    background-color: rgba(26, 162, 255, 0.1);
    border-color: var(--primary, #1aa2ff);
  }
  
  .droppedItem:active {
    background-color: rgba(239, 83, 80, 0.1);
    border-color: #ef5350;
  }
  
  /* Prevent scrolling during drag */
  .container {
    overflow: hidden;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
  
  /* Ensure proper touch handling */
  .activityArea {
    touch-action: pan-y;
  }
  
  .dragItems {
    touch-action: manipulation;
  }
  
  .dropTarget {
    touch-action: manipulation;
  }
}

/* Extra mobile optimizations for very small screens */
@media (max-width: 360px) {
  .dragItem {
    min-height: 48px; /* Larger touch target for very small screens */
    padding: 12px 8px;
  }
  
  .droppedItem {
    min-height: 48px;
    padding: 12px 8px;
  }
  
  .audioButton,
  .resetButton {
    min-height: 48px;
    padding: 12px 8px;
  }
  
  /* Reduce spacing for very small screens */
  .dragItems {
    gap: 12px;
  }
  
  .dropTarget {
    gap: 8px;
    padding: 8px;
  }
}

/* Prevent zoom on double tap for iOS */
@media (max-width: 768px) {
  .dragItem,
  .droppedItem,
  .audioButton,
  .resetButton {
    touch-action: manipulation;
  }
}

/* Ensure proper viewport handling */
@media (max-width: 768px) {
  .container {
    width: 100vw;
    height: 100vh;
    overflow-x: hidden;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    display: flex;
    flex-direction: column;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }

  .activityArea {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .itemsContainer {
    flex-shrink: 0;
  }

  .targetsGrid {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }
  
  /* Special handling for 4 targets on mobile */
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) {
    flex: 1;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 12px;
    max-width: 400px;
    margin: 0 auto;
    align-items: stretch;
  }

  .targetContainer {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .dropTarget {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
  }
}

/* Optimize for very small screens */
@media (max-width: 360px) {
  .container {
    height: 100vh;
    overflow-y: auto;
  }

  .activityArea {
    min-height: calc(100vh - 220px); /* Adjusted for smaller header space */
  }
  
  /* Special handling for 4 targets on very small screens */
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 8px;
    max-width: 280px;
    margin: 0 auto;
    align-items: stretch;
  }
}

/* Additional optimizations for 4-target layouts */
.targetsGrid:has(.targetContainer:nth-child(4):last-child) .dropTarget {
  /* Ensure consistent sizing for 4-target layouts */
  min-height: clamp(200px, 25vh, 300px);
  max-height: clamp(250px, 30vh, 350px);
  height: clamp(220px, 28vh, 320px);
  /* Optimize for cube structure with wrapping */
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 12px; /* Increased gap for better visibility */
  padding: 16px; /* Increased padding for better spacing */
  /* Ensure content can wrap properly */
  overflow: visible; /* Allow content to be visible */
}

/* Ensure optimal spacing for 4-target layouts */
.targetsGrid--four-targets .dropTarget {
  min-height: clamp(200px, 25vh, 300px);
  max-height: clamp(250px, 30vh, 350px);
  height: clamp(220px, 28vh, 320px);
  /* Optimize for cube structure with wrapping */
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 12px; /* Increased gap for better visibility */
  padding: 16px; /* Increased padding for better spacing */
  /* Ensure content can wrap properly */
  overflow: visible; /* Allow content to be visible */
}

/* Cube structure optimization for dropped items */
.targetsGrid:has(.targetContainer:nth-child(4):last-child) .droppedItem {
  /* Perfect cube dimensions with horizontal layout */
  width: 100%;
  height: 100%;
  min-width: unset;
  max-width: unset;
  display: flex;
  flex-direction: row; /* Horizontal layout: image left, text right */
  align-items: center; /* Center items vertically */
  justify-content: flex-start; /* Start content from left */
  text-align: left; /* Left-align text */
  padding: 10px; /* Good padding for horizontal layout */
  gap: 10px; /* Gap between image and text */
  /* Ensure items are properly sized for content visibility */
  min-height: 50px; /* Reduced height for horizontal layout */
  max-height: 80px; /* Maximum height for horizontal layout */
  /* Ensure content is visible */
  overflow: visible; /* Allow content to be fully visible */
  box-sizing: border-box; /* Include padding in size calculations */
  /* Proper operator item styling */
  background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
  border: 2px solid #bbddff;
  border-radius: 10px;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.08);
}

/* Cube structure optimization for dropped items with fallback class */
.targetsGrid--four-targets .droppedItem {
  /* Perfect cube dimensions with horizontal layout */
  width: 100%;
  height: 100%;
  min-width: unset;
  max-width: unset;
  display: flex;
  flex-direction: row; /* Horizontal layout: image left, text right */
  align-items: center; /* Center items vertically */
  justify-content: flex-start; /* Start content from left */
  text-align: left; /* Left-align text */
  padding: 10px; /* Good padding for horizontal layout */
  gap: 10px; /* Gap between image and text */
  /* Ensure items are properly sized for content visibility */
  min-height: 50px; /* Reduced height for horizontal layout */
  max-height: 80px; /* Maximum height for horizontal layout */
  /* Ensure content is visible */
  overflow: visible; /* Allow content to be fully visible */
  box-sizing: border-box; /* Include padding in size calculations */
  /* Proper operator item styling */
  background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
  border: 2px solid #bbddff;
  border-radius: 10px;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.08);
}

/* Ensure dropped items don't cause layout shifts */
.droppedItem {
  /* Prevent dropped items from affecting drop zone height */
  flex-shrink: 0;
  /* Prevent text wrapping */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Mobile optimizations for dropped items - ensure consistent sizing */
@media (max-width: 768px) {
  .droppedItem {
    min-height: 40px;
    max-height: 40px;
  }
}

@media (max-width: 480px) {
  .droppedItem {
    min-height: 36px;
    max-height: 36px;
  }
}

@media (max-width: 360px) {
  .droppedItem {
    min-height: 32px;
    max-height: 32px;
  }
}

/* High DPI displays */
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  .dragItemImage img,
  .droppedItemImage img {
    image-rendering: -webkit-optimize-contrast;
    image-rendering: crisp-edges;
  }
}

/* Reduced motion for accessibility */
@media (prefers-reduced-motion: reduce) {
  .dragItem,
  .droppedItem,
  .audioButton,
  .resetButton {
    transition: none;
  }

  .dragItem:hover,
  .droppedItem:hover,
  .audioButton:hover,
  .resetButton:hover {
    transform: none;
  }

  .feedbackMessage {
    animation: none;
  }
}



.chooseBackButton {
  background: none;
  border: none;
  color: var(--text-medium, #666);
  cursor: pointer;
  padding: 8px 12px;
  border-radius: 8px;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 6px;
  font-size: 1.25em;
  position: absolute;
  top: 18px;
  left: 18px;
  z-index: 2;
}
.chooseBackButton:hover {
  background-color: var(--background-medium, #f0f7ff);
  color: var(--text-dark, #222);
}
.backText {
  font-size: 1em;
  font-weight: 600;
  margin-left: 2px;
  display: none;
}
@media (min-width: 640px) {
  .backText { display: inline; }
}
.dragItemDisabled {
  opacity: 0.5;
  pointer-events: none;
  filter: grayscale(0.7);
}
.emptyMessage {
  text-align: center;
  color: #888;
  margin-top: 40px;
  font-size: 18px;
  font-style: italic;
}

/* Fallback for browsers that don't support :has() selector */
.targetsGrid--four-targets {
  grid-template-columns: repeat(2, 1fr) !important;
  max-width: 1200px !important;
  margin: 0 auto !important;
  gap: 24px !important;
}

/* Mobile fallback for 4 targets */
@media (max-width: 900px) {
  .targetsGrid--four-targets {
    max-width: 600px !important;
    gap: 16px !important;
  }
}

@media (max-width: 768px) {
  .targetsGrid--four-targets {
    max-width: 400px !important;
    gap: 12px !important;
  }
}

@media (max-width: 480px) {
  .targetsGrid--four-targets {
    max-width: 320px !important;
    gap: 8px !important;
  }
}

@media (max-width: 360px) {
  .targetsGrid--four-targets {
    max-width: 280px !important;
    gap: 6px !important;
  }
}

/* Ensure optimal spacing for 4-target layouts */
.targetsGrid--four-targets .dropTarget {
  min-height: clamp(200px, 25vh, 300px);
  max-height: clamp(250px, 30vh, 350px);
  height: clamp(220px, 28vh, 320px);
  /* Optimize for cube structure with wrapping */
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 12px; /* Increased gap for better visibility */
  padding: 16px; /* Increased padding for better spacing */
  /* Ensure content can wrap properly */
  overflow: visible; /* Allow content to be visible */
}

/* Mobile cube structure optimizations */
@media (max-width: 768px) {
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) .dropTarget,
  .targetsGrid--four-targets .dropTarget {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 8px; /* Maintain good spacing on mobile */
    padding: 12px; /* Maintain good padding on mobile */
    min-height: 140px;
    max-height: 180px;
    height: 160px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) .droppedItem,
  .targetsGrid--four-targets .droppedItem {
    width: 100%;
    height: 100%;
    min-width: unset;
    max-width: unset;
    flex-direction: column;
    padding: 8px; /* Maintain good padding on mobile */
    gap: 6px; /* Maintain good spacing on mobile */
    min-height: 60px; /* Ensure minimum visibility on mobile */
    max-height: 80px;
    /* Maintain operator styling */
    background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
    border: 2px solid #bbddff;
    border-radius: 10px;
    box-shadow: 0 3px 10px rgba(0,0,0,0.08);
  }
  
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) .droppedItemImage,
  .targetsGrid--four-targets .droppedItemImage {
    width: 44px; /* Maintain good image size on mobile */
    height: 44px;
    margin-bottom: 6px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) .droppedItemText,
  .targetsGrid--four-targets .droppedItemText {
    font-size: 14px; /* Maintain good text size on mobile */
    font-weight: 600;
  }
}

@media (max-width: 480px) {
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) .dropTarget,
  .targetsGrid--four-targets .dropTarget {
    gap: 6px; /* Maintain good spacing on small mobile */
    padding: 10px; /* Maintain good padding on small mobile */
    min-height: 120px;
    max-height: 160px;
    height: 140px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) .droppedItem,
  .targetsGrid--four-targets .droppedItem {
    padding: 6px; /* Maintain good padding on small mobile */
    gap: 4px; /* Maintain good spacing on small mobile */
    min-height: 50px; /* Ensure minimum visibility on small mobile */
    max-height: 70px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) .droppedItemImage,
  .targetsGrid--four-targets .droppedItemImage {
    width: 40px; /* Maintain good image size on small mobile */
    height: 40px;
    margin-bottom: 4px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) .droppedItemText,
  .targetsGrid--four-targets .droppedItemText {
    font-size: 13px; /* Maintain good text size on small mobile */
  }
}

@media (max-width: 360px) {
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) .dropTarget,
  .targetsGrid--four-targets .dropTarget {
    gap: 4px; /* Maintain good spacing on extra small mobile */
    padding: 8px; /* Maintain good padding on extra small mobile */
    min-height: 100px;
    max-height: 140px;
    height: 120px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) .droppedItem,
  .targetsGrid--four-targets .droppedItem {
    padding: 5px; /* Maintain good padding on extra small mobile */
    gap: 3px; /* Maintain good spacing on extra small mobile */
    min-height: 40px; /* Ensure minimum visibility on extra small mobile */
    max-height: 60px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) .droppedItemImage,
  .targetsGrid--four-targets .droppedItemImage {
    width: 36px; /* Maintain good image size on extra small mobile */
    height: 36px;
    margin-bottom: 3px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(4):last-child) .droppedItemText,
  .targetsGrid--four-targets .droppedItemText {
    font-size: 12px; /* Maintain good text size on extra small mobile */
  }
}

/* Special handling for 2 targets - make items bigger and more square */
.targetsGrid:has(.targetContainer:nth-child(2):last-child) .dropTarget {
  /* Use more vertical space when only 2 targets */
  min-height: clamp(300px, 35vh, 400px);
  max-height: clamp(350px, 40vh, 450px);
  height: clamp(320px, 38vh, 420px);
  /* Allow more flexible layout for fewer items */
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 16px;
  padding: 20px;
  align-content: flex-start;
  justify-content: flex-start;
}

/* Make dropped items bigger and more square for 2-target layouts */
.targetsGrid:has(.targetContainer:nth-child(2):last-child) .droppedItem {
  /* Larger, more square items with horizontal layout */
  width: calc(50% - 8px); /* Fit 2 items per line with larger gap */
  min-width: 140px;
  max-width: 200px;
  min-height: 70px; /* Adjusted height for horizontal layout */
  max-height: 70px; /* Fixed height to prevent overflow */
  padding: 12px 14px; /* Good padding for horizontal layout */
  gap: 12px; /* Increased gap between image and text for larger items */
  /* Horizontal layout: image left, text right */
  display: flex;
  flex-direction: row; /* Horizontal layout */
  align-items: center; /* Center items vertically */
  justify-content: flex-start; /* Start content from left */
  text-align: left; /* Left-align text */
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  /* Ensure content is visible */
  overflow: visible; /* Allow content to be fully visible */
  box-sizing: border-box; /* Include padding in size calculations */
}

.targetsGrid--two-targets .droppedItem {
  width: calc(50% - 8px);
  min-width: 140px;
  max-width: 200px;
  min-height: 70px; /* Adjusted height for horizontal layout */
  max-height: 70px; /* Fixed height to prevent overflow */
  padding: 12px 14px; /* Good padding for horizontal layout */
  gap: 12px; /* Increased gap between image and text for larger items */
  display: flex;
  flex-direction: row; /* Horizontal layout */
  align-items: center; /* Center items vertically */
  justify-content: flex-start; /* Start content from left */
  text-align: left; /* Left-align text */
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  /* Ensure content is visible */
  overflow: visible; /* Allow content to be fully visible */
  box-sizing: border-box; /* Include padding in size calculations */
}

/* Larger images for 2-target layouts */
.targetsGrid:has(.targetContainer:nth-child(2):last-child) .droppedItemImage {
  width: 48px;
  height: 48px;
  margin-bottom: 8px;
}

/* Larger text for 2-target layouts */
.targetsGrid:has(.targetContainer:nth-child(2):last-child) .droppedItemText {
  font-size: 18px;
  font-weight: 600;
  line-height: 1.3;
  /* Ensure text is clearly visible */
  color: #2c3e50;
  text-shadow: 0 1px 2px rgba(255, 255, 255, 0.8);
  /* Ensure text is fully visible */
  overflow: visible; /* Allow text to be fully visible */
  text-overflow: clip; /* Don't clip text */
  white-space: normal; /* Allow text to wrap if needed for visibility */
  /* Ensure text doesn't get cut off */
  max-width: 100%; /* Text width cannot exceed container */
}

/* Fallback class for 2 targets */
.targetsGrid--two-targets .dropTarget {
  min-height: clamp(300px, 35vh, 400px);
  max-height: clamp(350px, 40vh, 450px);
  height: clamp(320px, 38vh, 420px);
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 16px;
  padding: 20px;
  align-content: flex-start;
  justify-content: flex-start;
}

.targetsGrid--two-targets .droppedItem {
  width: calc(50% - 8px);
  min-width: 140px;
  max-width: 200px;
  min-height: 80px;
  max-height: 80px; /* Fixed height to prevent overflow */
  padding: 10px 12px; /* Reduced padding to prevent overflow */
  gap: 6px; /* Gap between icon and text */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  border-radius: 10px; /* Slightly reduced for better fit */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  /* Ensure content stays within bounds */
  overflow: hidden; /* Prevent content overflow */
  box-sizing: border-box; /* Include padding in size calculations */
}

.targetsGrid--two-targets .droppedItemImage {
  width: 48px;
  height: 48px;
  margin-bottom: 8px;
}

.targetsGrid--two-targets .droppedItemText {
  font-size: 18px;
  font-weight: 600;
  line-height: 1.3;
  /* Ensure text is clearly visible */
  color: #2c3e50;
  text-shadow: 0 1px 2px rgba(255, 255, 255, 0.8);
  /* Ensure text is fully visible */
  overflow: visible; /* Allow text to be fully visible */
  text-overflow: clip; /* Don't clip text */
  white-space: normal; /* Allow text to wrap if needed for visibility */
  /* Ensure text doesn't get cut off */
  max-width: 100%; /* Text width cannot exceed container */
}

/* Mobile optimizations for 2-target layouts */
@media (max-width: 768px) {
  .targetsGrid:has(.targetContainer:nth-child(2):last-child) .dropTarget,
  .targetsGrid--two-targets .dropTarget {
    min-height: 200px;
    max-height: 280px;
    height: 240px;
    gap: 12px;
    padding: 16px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(2):last-child) .droppedItem,
  .targetsGrid--two-targets .droppedItem {
    width: calc(50% - 6px);
    min-width: 120px;
    max-width: 160px;
    min-height: 70px;
    max-height: 70px;
    padding: 10px 12px;
    gap: 6px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(2):last-child) .droppedItemImage,
  .targetsGrid--two-targets .droppedItemImage {
    width: 40px;
    height: 40px;
    margin-bottom: 6px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(2):last-child) .droppedItemText,
  .targetsGrid--two-targets .droppedItemText {
    font-size: 16px;
  }
}

@media (max-width: 480px) {
  .targetsGrid:has(.targetContainer:nth-child(2):last-child) .dropTarget,
  .targetsGrid--two-targets .dropTarget {
    min-height: 180px;
    max-height: 240px;
    height: 200px;
    gap: 10px;
    padding: 12px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(2):last-child) .droppedItem,
  .targetsGrid--two-targets .droppedItem {
    width: calc(50% - 5px);
    min-width: 100px;
    max-width: 140px;
    min-height: 60px;
    max-height: 60px;
    padding: 8px 10px;
    gap: 5px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(2):last-child) .droppedItemImage,
  .targetsGrid--two-targets .droppedItemImage {
    width: 36px;
    height: 36px;
    margin-bottom: 5px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(2):last-child) .droppedItemText,
  .targetsGrid--two-targets .droppedItemText {
    font-size: 15px;
  }
}

@media (max-width: 360px) {
  .targetsGrid:has(.targetContainer:nth-child(2):last-child) .dropTarget,
  .targetsGrid--two-targets .dropTarget {
    min-height: 160px;
    max-height: 200px;
    height: 180px;
    gap: 8px;
    padding: 10px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(2):last-child) .droppedItem,
  .targetsGrid--two-targets .droppedItem {
    width: calc(50% - 4px);
    min-width: 80px;
    max-width: 120px;
    min-height: 50px;
    max-height: 50px;
    padding: 6px 8px;
    gap: 4px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(2):last-child) .droppedItemImage,
  .targetsGrid--two-targets .droppedItemImage {
    width: 32px;
    height: 32px;
    margin-bottom: 4px;
  }
  
  .targetsGrid:has(.targetContainer:nth-child(2):last-child) .droppedItemText,
  .targetsGrid--two-targets .droppedItemText {
    font-size: 14px;
  }
}

/* Larger images and text for 4-target layouts */
.targetsGrid:has(.targetContainer:nth-child(4):last-child) .droppedItemImage,
.targetsGrid--four-targets .droppedItemImage {
  width: 56px; /* Increased from 48px for better visibility */
  height: 56px;
  margin-bottom: 8px;
  flex-shrink: 0; /* Prevent image from shrinking */
}

.targetsGrid:has(.targetContainer:nth-child(4):last-child) .droppedItemText,
.targetsGrid--four-targets .droppedItemText {
  font-size: 16px; /* Increased from 14px for better readability */
  font-weight: 600;
  line-height: 1.4;
  /* Ensure text is clearly visible */
  color: #2c3e50;
  text-shadow: 0 1px 2px rgba(255, 255, 255, 0.8);
}

/* 4-target layout: Cube structure with smaller items */
.targetsGrid:has(.targetContainer:nth-child(4):last-child) .droppedItem {
  width: 100%; /* Full width within grid cell */
  height: 100%; /* Full height within grid cell */
  flex-direction: column; /* Stack image above text */
  align-items: center; /* Center items horizontally */
  justify-content: center; /* Center items vertically */
  text-align: center; /* Center text */
  padding: 8px; /* Reduced padding for smaller items */
  gap: 6px; /* Reduced gap for smaller items */
  min-height: 60px; /* Reduced height for smaller items */
  max-height: 100px; /* Reduced maximum height */
  /* Ensure content stays within boundaries */
  overflow: hidden; /* Hide overflow content */
  box-sizing: border-box; /* Include padding in size calculations */
  background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
  border: 2px solid #e9ecef;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.targetsGrid--four-targets .droppedItem {
  width: 100%; /* Full width within grid cell */
  height: 100%; /* Full height within grid cell */
  flex-direction: column; /* Stack image above text */
  align-items: center; /* Center items horizontally */
  justify-content: center; /* Center items vertically */
  text-align: center; /* Center text */
  padding: 8px; /* Reduced padding for smaller items */
  gap: 6px; /* Reduced gap for smaller items */
  min-height: 60px; /* Reduced height for smaller items */
  max-height: 100px; /* Reduced maximum height */
  /* Ensure content stays within boundaries */
  overflow: hidden; /* Hide overflow content */
  box-sizing: border-box; /* Include padding in size calculations */
  background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
  border: 2px solid #e9ecef;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

/* 2-target layout: Bigger square items with smaller sizing */
.targetsGrid:has(.targetContainer:nth-child(2):last-child) .droppedItem {
  width: calc(50% - 8px); /* Fit 2 items per line */
  min-width: 120px; /* Reduced minimum width */
  max-width: 160px; /* Reduced maximum width */
  min-height: 60px; /* Reduced height for smaller items */
  max-height: 60px; /* Reduced maximum height */
  padding: 10px 12px; /* Reduced padding for smaller items */
  gap: 14px; /* Increased gap from 8px to 14px for better spacing */
  flex-direction: row; /* Horizontal layout: image left, text right */
  align-items: center; /* Center items vertically */
  justify-content: center; /* Changed from flex-start to center for horizontal centering */
  text-align: center; /* Changed from left to center for text alignment */
  border-radius: 10px; /* Reduced border radius */
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
  /* Ensure content stays within boundaries */
  overflow: hidden; /* Hide overflow content */
  box-sizing: border-box; /* Include padding in size calculations */
}

.targetsGrid--two-targets .droppedItem {
  width: calc(50% - 8px); /* Fit 2 items per line */
  min-width: 120px; /* Reduced minimum width */
  max-width: 160px; /* Reduced maximum width */
  min-height: 60px; /* Reduced height for smaller items */
  max-height: 60px; /* Reduced maximum height */
  padding: 10px 12px; /* Reduced padding for smaller items */
  gap: 14px; /* Increased gap from 8px to 14px for better spacing */
  flex-direction: row; /* Horizontal layout: image left, text right */
  align-items: center; /* Center items vertically */
  justify-content: center; /* Changed from flex-start to center for horizontal centering */
  text-align: center; /* Changed from left to center for text alignment */
  border-radius: 10px; /* Reduced border radius */
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
  /* Ensure content stays within boundaries */
  overflow: hidden; /* Hide overflow content */
  box-sizing: border-box; /* Include padding in size calculations */
}

/* 4-target layout: Smaller images and text */
.targetsGrid:has(.targetContainer:nth-child(4):last-child) .droppedItemImage {
  width: 32px; /* Smaller size for 4-target layout */
  height: 32px; /* Smaller size for 4-target layout */
  margin-bottom: 4px; /* Small gap below image */
}

.targetsGrid--four-targets .droppedItemImage {
  width: 32px; /* Smaller size for 4-target layout */
  height: 32px; /* Smaller size for 4-target layout */
  margin-bottom: 4px; /* Small gap below image */
}

.targetsGrid:has(.targetContainer:nth-child(4):last-child) .droppedItemText {
  font-size: 14px; /* Smaller font for 4-target layout */
  line-height: 1.3; /* Good line height for readability */
  color: #2c3e50;
  /* Ensure text fits in one line */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  text-shadow: 0 1px 2px rgba(255, 255, 255, 0.8);
}

.targetsGrid--four-targets .droppedItemText {
  font-size: 14px; /* Smaller font for 4-target layout */
  line-height: 1.3; /* Good line height for readability */
  color: #2c3e50;
  /* Ensure text fits in one line */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  text-shadow: 0 1px 2px rgba(255, 255, 255, 0.8);
}

/* 2-target layout: Smaller images and text */
.targetsGrid:has(.targetContainer:nth-child(2):last-child) .droppedItemImage {
  width: 28px; /* Smaller size for 2-target layout */
  height: 28px; /* Smaller size for 2-target layout */
  margin-bottom: 0; /* No bottom margin for horizontal layout */
}

.targetsGrid--two-targets .droppedItemImage {
  width: 28px; /* Smaller size for 2-target layout */
  height: 28px; /* Smaller size for 2-target layout */
  margin-bottom: 0; /* No bottom margin for horizontal layout */
}

.targetsGrid:has(.targetContainer:nth-child(2):last-child) .droppedItemText {
  font-size: 13px; /* Smaller font for 2-target layout */
  line-height: 1.2; /* Tighter line height */
  color: #2c3e50;
  /* Ensure text fits in one line */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.targetsGrid--two-targets .droppedItemText {
  font-size: 13px; /* Smaller font for 2-target layout */
  line-height: 1.2; /* Tighter line height */
  color: #2c3e50;
  /* Ensure text fits in one line */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}