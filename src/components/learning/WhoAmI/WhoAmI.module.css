/* --- Google Font & Basic Setup --- */
@import url('https://fonts.googleapis.com/css2?family=Nunito:wght@400;700&family=Quicksand:wght@500;700&display=swap');

/* --- Container (Full-screen like other components) --- */
.container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100vw;
    height: 100vh;
    max-height: 100vh;
    left: 0;
    top: 0;
    position: absolute;
    padding: 1rem;
    margin: 0;
    font-family: 'Nunito', 'Quicksand', sans-serif;
    background-image: url('/images/background/image-1.png');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    color: #5c4b40;
    box-sizing: border-box;
    overflow: hidden;
    animation: fadeInBackground 0.5s ease-in;
}

@keyframes fadeInBackground {
    from {
        opacity: 0.7;
    }
    to {
        opacity: 1;
    }
}

/* --- Main Game Card --- */
.gameCard {
    /* CSS Variables defined within the component */
    --bg-yellow: #fffbeb;
    --card-bg: rgba(255, 255, 255, 0.9);
    --char-blue: #38bdf8;
    --text-dark: #5c4b40;
    --main-font: 'Nunito', 'Quicksand', sans-serif;
    
    --btn-bg: #fff;
    --btn-border: #bbddff;
    --btn-shadow: #a8d4ff;

    --win-green: #34d399;
    --win-green-bg: #e6f9ed;
    --win-green-shadow: #a7f3d0;
    --lose-red: #f87171;
    --lose-red-bg: #fdeeee;
    --lose-red-shadow: #fca5a5;
    
    background-color: var(--card-bg);
    background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.95), rgba(240, 248, 255, 0.9));
    border-radius: clamp(20px, 3vw, 30px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15), 0 0 40px rgba(135, 206, 250, 0.2);
    padding: clamp(15px, 2vw, 30px) clamp(20px, 3vw, 40px);
    width: 95%;
    max-width: min(90vw, 1200px);
    max-height: calc(90vh - 80px);
    text-align: center;
    position: relative;
    margin: 0 auto;
    font-family: var(--main-font);
    color: var(--text-dark);
    box-sizing: border-box;
    backdrop-filter: blur(5px);
    border: 3px solid #bbddff;
    overflow: auto;
    display: flex;
    flex-direction: column;
    animation: cardEnter 0.6s cubic-bezier(0.22, 1, 0.36, 1);
}

@keyframes cardEnter {
    from {
        transform: translateY(10px) scale(0.98);
        opacity: 0;
    }
    to {
        transform: translateY(0) scale(1);
        opacity: 1;
    }
}

.gameCard:hover {
    transform: none; /* Remove the rotation hover effect to match other components */
}

/* --- Decorative Icons --- */
.gameCard::before,
.gameCard::after {
    content: '';
    position: absolute;
    opacity: 0.75;
    background-size: contain;
    background-repeat: no-repeat;
    z-index: 1;
}

.gameCard::before { /* Book Icon */
    content: 'ðŸ“š';
    font-size: clamp(24px, 3.5vw, 32px);
    top: clamp(20px, 3vh, 35px);
    left: clamp(15px, 2vw, 25px);
    transform: rotate(-15deg);
    animation: float 3s ease-in-out infinite alternate;
    text-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
}

.gameCard::after { /* Sparkle Icon */
    content: 'âœ¨';
    font-size: clamp(18px, 2.5vw, 26px);
    top: clamp(65px, 8vh, 80px);
    left: clamp(15px, 2vw, 25px);
    opacity: 0.9;
    transform: rotate(15deg);
    animation: float 3s ease-in-out infinite alternate reverse;
    text-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
}

@keyframes float {
    from {
        transform: translateY(0px) rotate(-15deg);
    }
    to {
        transform: translateY(-10px) rotate(-20deg);
    }
}

.gearIcon {
    position: absolute;
    top: clamp(25px, 4vh, 38px);
    right: clamp(20px, 3vw, 28px);
    font-size: clamp(20px, 3vw, 26px);
    opacity: 0.6;
    transform: rotate(15deg);
    animation: rotate 8s linear infinite;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

/* --- Riddle/Prompt Area --- */
.promptContainer {
    background: linear-gradient(135deg, #fef7cd, #fef3c7);
    border-radius: clamp(15px, 2.5vw, 20px);
    box-shadow: 0 4px 15px rgba(255, 193, 7, 0.3), inset 0 1px 0 rgba(255, 255, 255, 0.5);
    padding: clamp(15px, 2.5vh, 25px) clamp(12px, 2vw, 20px);
    margin-bottom: clamp(20px, 3vh, 30px);
    max-width: 700px;
    margin-left: auto;
    margin-right: auto;
    border: 2px solid #fbbf24;
    position: relative;
    overflow: hidden;
}

.promptContainer::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 30%;
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0));
    pointer-events: none;
}

.promptText {
    font-size: clamp(1.1rem, 2.2vw, 1.4rem);
    line-height: 1.6;
    margin: 0 0 clamp(10px, 2vh, 15px) 0;
    font-weight: 500;
    color: #92400e;
    font-family: "Comic Sans MS", "Comic Sans", Nunito, cursive, sans-serif;
    text-shadow: 0 1px 2px rgba(255, 255, 255, 0.8);
}

.promptQuestion {
    font-size: clamp(1.5rem, 3vw, 2.2rem);
    font-weight: 700;
    color: var(--char-blue);
    margin: 0;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
    font-family: "Comic Sans MS", "Comic Sans", Nunito, cursive, sans-serif;
    animation: bounce 2s ease-in-out infinite;
}

@keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
    }
    40% {
        transform: translateY(-5px);
    }
    60% {
        transform: translateY(-3px);
    }
}

/* --- Answer Options --- */
.optionsContainer {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* Increased minimum size */
    gap: clamp(25px, 3.5vw, 40px); /* Increased gap between options */
    transition: opacity 0.3s ease;
    margin-bottom: clamp(25px, 4vh, 40px);
    padding: 0 clamp(10px, 2vw, 20px);
}

.gameCard.gameOver .optionsContainer {
    opacity: 0;
    pointer-events: none;
}

.optionButton {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: clamp(15px, 2.5vh, 25px); /* Increased gap between icon and text */
    width: 100%;
    padding: clamp(22px, 3.5vh, 35px) clamp(18px, 3vw, 30px); /* Increased padding for larger button */
    background-color: var(--btn-bg);
    background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.9), rgba(240, 248, 255, 0.8));
    border: 5px solid var(--btn-border); /* Even thicker border */
    border-radius: clamp(20px, 3.5vw, 28px); /* More rounded corners */
    box-shadow: 0 10px 0 0 var(--btn-shadow), 0 10px 20px rgba(0, 0, 0, 0.15); /* Enhanced shadow */
    font-size: clamp(1.2rem, 2.4vw, 1.6rem); /* Larger text */
    font-weight: 700; /* Bolder text */
    cursor: pointer;
    transition: all 0.2s cubic-bezier(0.22, 1, 0.36, 1);
    font-family: "Comic Sans MS", "Comic Sans", Nunito, cursive, sans-serif;
    color: var(--text-dark);
    position: relative;
    overflow: hidden;
}

.optionButton::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 40%;
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0));
    pointer-events: none;
}

.optionButton:not(:disabled):hover {
    transform: translateY(-7px) scale(1.05); /* Enhanced lift effect and scaling */
    box-shadow: 0 15px 0 0 var(--btn-shadow), 0 15px 25px rgba(0, 0, 0, 0.2); /* Enhanced shadow */
    border-color: #1aa2ff;
    background-image: linear-gradient(to bottom, rgba(26, 162, 255, 0.15), rgba(135, 206, 250, 0.08)); /* Slightly stronger gradient */
}

.optionButton:not(:disabled):active {
    transform: translateY(4px) scale(0.98);
    box-shadow: 0 3px 0 0 var(--btn-shadow), 0 4px 8px rgba(0, 0, 0, 0.1); /* Adjusted shadow for active state */
}

.optionIcon {
    width: 90% !important;
    height: 90% !important;
    max-width: 180px;
    max-height: 180px;
    min-width: 100px;
    min-height: 100px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: none !important;
    border: none !important;
    box-shadow: none !important;
    padding: 0 !important;
    margin: 0 auto;
}

.optionIcon svg,
.optionIcon img {
    width: 100% !important;
    height: 100% !important;
    max-width: 180px;
    max-height: 180px;
    min-width: 100px;
    min-height: 100px;
    object-fit: contain;
    filter: none !important;
    transform: none !important;
}

.optionButton:not(:disabled):hover .optionIcon {
    transform: none !important;
    filter: none !important;
    background: none !important;
    border: none !important;
}

.optionButton:not(:disabled):hover .optionIcon svg,
.optionButton:not(:disabled):hover .optionIcon img {
    filter: none !important;
    transform: none !important;
}

/* --- Feedback Styles --- */
.optionButton.correct {
    background-color: var(--win-green-bg) !important;
    background-image: linear-gradient(to bottom, rgba(52, 211, 153, 0.2), rgba(167, 243, 208, 0.1)) !important;
    box-shadow: 0 8px 0 0 var(--win-green-shadow), 0 8px 20px rgba(52, 211, 153, 0.3) !important;
    animation: correctPop 0.6s cubic-bezier(0.22, 1, 0.36, 1) !important;
    color: #065f46 !important;
    border-color: var(--win-green) !important;
    border-width: 3px !important;
}

.optionButton.incorrect {
    background-color: var(--lose-red-bg) !important;
    background-image: linear-gradient(to bottom, rgba(248, 113, 113, 0.2), rgba(252, 165, 165, 0.1)) !important;
    box-shadow: 0 8px 0 0 var(--lose-red-shadow), 0 8px 20px rgba(248, 113, 113, 0.3) !important;
    animation: incorrectShake 0.6s ease !important;
    color: #991b1b !important;
    border-color: var(--lose-red) !important;
    border-width: 3px !important;
}

@keyframes correctPop {
    0% { 
        transform: scale(1); 
    }
    50% { 
        transform: scale(1.08) translateY(-2px);
    }
    100% { 
        transform: scale(1.02);
    }
}

@keyframes incorrectShake {
    0%, 100% { 
        transform: translateX(0) rotate(0deg); 
    }
    15% { 
        transform: translateX(-8px) rotate(-2deg); 
    }
    30% { 
        transform: translateX(8px) rotate(2deg); 
    }
    45% { 
        transform: translateX(-6px) rotate(-1deg); 
    }
    60% { 
        transform: translateX(6px) rotate(1deg); 
    }
    75% { 
        transform: translateX(-4px) rotate(-0.5deg); 
    }
    90% { 
        transform: translateX(4px) rotate(0.5deg); 
    }
}

.optionButton:disabled { 
    cursor: not-allowed; 
    opacity: 0.6;
    filter: grayscale(0.3);
}

/* Enhanced feedback for correct/incorrect icons */
.optionButton.correct .optionIcon {
    transform: scale(1.15) rotate(5deg) !important;
    filter: brightness(1.3) drop-shadow(0 6px 15px rgba(52, 211, 153, 0.6)) !important;
    animation: correctIconSpin 0.8s ease !important;
    border-color: rgba(52, 211, 153, 0.8) !important;
}

.optionButton.incorrect .optionIcon {
    transform: scale(0.9) rotate(-5deg) !important;
    filter: brightness(0.8) drop-shadow(0 6px 15px rgba(248, 113, 113, 0.6)) !important;
    animation: incorrectIconShake 0.6s ease !important;
    border-color: rgba(248, 113, 113, 0.8) !important;
}

/* Enhanced feedback for icons inside correct/incorrect buttons */
.optionButton.correct .optionIcon svg,
.optionButton.correct .optionIcon img {
    filter: drop-shadow(0 4px 12px rgba(52, 211, 153, 0.7)) !important;
    transform: scale(1.1) !important;
}

.optionButton.incorrect .optionIcon svg,
.optionButton.incorrect .optionIcon img {
    filter: drop-shadow(0 4px 12px rgba(248, 113, 113, 0.7)) !important;
    transform: scale(0.9) !important;
}

@keyframes correctIconSpin {
    0% { transform: scale(1) rotate(0deg); }
    50% { transform: scale(1.2) rotate(180deg); }
    100% { transform: scale(1.1) rotate(360deg); }
}

@keyframes incorrectIconShake {
    0%, 100% { transform: scale(0.9) rotate(0deg); }
    25% { transform: scale(0.85) rotate(-10deg); }
    75% { transform: scale(0.95) rotate(10deg); }
}

/* --- Win Screen --- */
.winScreen {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(240, 248, 255, 0.9));
    backdrop-filter: blur(8px);
    border-radius: clamp(20px, 3vw, 30px);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 10;
    opacity: 0;
    visibility: hidden;
    transform: scale(0.8);
    transition: all 0.4s cubic-bezier(0.22, 1, 0.36, 1);
    border: 3px solid #bbddff;
}

.winScreen.visible {
    opacity: 1;
    visibility: visible;
    transform: scale(1);
}

.winText {
    font-size: clamp(2.5rem, 6vw, 4.5rem);
    color: var(--win-green);
    text-shadow: 3px 3px 0 #fff, 6px 6px 0 var(--text-dark), 0 0 20px rgba(52, 211, 153, 0.5);
    margin-bottom: clamp(15px, 3vh, 25px);
    font-family: "Comic Sans MS", "Comic Sans", Nunito, cursive, sans-serif;
    font-weight: 700;
    animation: winTextPulse 2s ease-in-out infinite alternate;
    text-align: center;
}

@keyframes winTextPulse {
    from {
        transform: scale(1);
        text-shadow: 3px 3px 0 #fff, 6px 6px 0 var(--text-dark), 0 0 20px rgba(52, 211, 153, 0.5);
    }
    to {
        transform: scale(1.05);
        text-shadow: 4px 4px 0 #fff, 8px 8px 0 var(--text-dark), 0 0 30px rgba(52, 211, 153, 0.8);
    }
}

.starContainer {
    position: relative;
    width: 100%;
    height: clamp(80px, 12vh, 120px);
    margin-bottom: clamp(15px, 3vh, 25px);
}

.star {
    position: absolute;
    color: #ffc107;
    font-size: clamp(1.5rem, 3vw, 2.5rem);
    animation: starAnimation 1.2s cubic-bezier(0.22, 1, 0.36, 1) forwards;
    opacity: 0;
    filter: drop-shadow(0 2px 8px rgba(255, 193, 7, 0.6));
}

.star.s1 { 
    top: 15%; 
    left: 20%; 
    animation-delay: 0.1s; 
}

.star.s2 { 
    top: 25%; 
    left: 80%; 
    animation-delay: 0.2s; 
    font-size: clamp(1.2rem, 2.5vw, 2rem); 
}

.star.s3 { 
    top: 70%; 
    left: 10%; 
    animation-delay: 0.3s; 
    font-size: clamp(1.8rem, 3.5vw, 3rem); 
}

.star.s4 { 
    top: 80%; 
    left: 75%; 
    animation-delay: 0.4s; 
}

.star.s5 { 
    top: 40%; 
    left: 50%; 
    animation-delay: 0.5s; 
    font-size: clamp(2rem, 4vw, 3.5rem); 
}

@keyframes starAnimation {
    0% { 
        transform: scale(0) rotate(0deg); 
        opacity: 0; 
    }
    50% { 
        transform: scale(1.3) rotate(180deg); 
        opacity: 1; 
    }
    100% { 
        transform: scale(1) rotate(360deg); 
        opacity: 1; 
    }
}

.playAgainBtn {
    font-family: "Comic Sans MS", "Comic Sans", Nunito, cursive, sans-serif;
    font-size: clamp(1.1rem, 2.2vw, 1.4rem);
    font-weight: 600;
    padding: clamp(10px, 2vh, 15px) clamp(20px, 3vw, 30px);
    border-radius: clamp(12px, 2vw, 18px);
    border: 3px solid var(--char-blue);
    box-shadow: 0 6px 0 0 #1e90ff, 0 6px 15px rgba(30, 144, 255, 0.3);
    background: linear-gradient(135deg, var(--char-blue), #1e90ff);
    color: white;
    cursor: pointer;
    transition: all 0.2s cubic-bezier(0.22, 1, 0.36, 1);
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    position: relative;
    overflow: hidden;
}

.playAgainBtn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 50%;
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0));
    pointer-events: none;
}

.playAgainBtn:hover {
    transform: translateY(-2px) scale(1.02);
    box-shadow: 0 8px 0 0 #1e90ff, 0 8px 20px rgba(30, 144, 255, 0.4);
    background: linear-gradient(135deg, #1e90ff, #4169e1);
}

.playAgainBtn:active {
    transform: translateY(3px) scale(0.98);
    box-shadow: 0 3px 0 0 #1e90ff, 0 3px 10px rgba(30, 144, 255, 0.3);
}

/* --- Character Mascot --- */
.mascotContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: clamp(15px, 2.5vh, 25px);
    width: 100%;
    height: clamp(80px, 12vh, 120px);
    animation: mascotBounce 2.5s infinite cubic-bezier(0.4,0,0.2,1);
    z-index: 2;
}

@keyframes mascotBounce {
    0%, 100% { 
        transform: translateY(0) scale(1); 
    }
    50% { 
        transform: translateY(-15px) scale(1.05); 
    }
}

/* Win Mascot (overlay) */
.winMascot {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: clamp(15px, 3vh, 25px) 0 0 0;
    width: clamp(120px, 15vw, 160px);
    height: clamp(100px, 12vh, 140px);
    animation: mascotCelebrate 1.5s cubic-bezier(0.22, 1, 0.36, 1);
}

@keyframes mascotCelebrate {
    0% { 
        transform: scale(0.5) rotate(-15deg); 
        opacity: 0; 
    }
    60% { 
        transform: scale(1.2) rotate(10deg); 
        opacity: 1; 
    }
    100% { 
        transform: scale(1) rotate(0deg); 
        opacity: 1; 
    }
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .optionsContainer { 
        grid-template-columns: 1fr;
        gap: clamp(20px, 3vh, 28px);
        padding: 0 clamp(8px, 1.5vw, 15px);
    }
    
    .optionButton { 
        padding: clamp(18px, 2.5vh, 25px) clamp(15px, 2vw, 22px);
        font-size: clamp(1.1rem, 4vw, 1.5rem); /* Adjusted for mobile */
    }
    
    .optionIcon {
        max-width: 140px;
        max-height: 140px;
        min-width: 80px;
        min-height: 80px;
    }
    
    .optionIcon svg,
    .optionIcon img {
        max-width: 140px;
        max-height: 140px;
        min-width: 80px;
        min-height: 80px;
    }
    
    .mascotContainer { 
        height: clamp(65px, 11vh, 95px); 
    }
    
    .winMascot { 
        width: clamp(110px, 15vw, 140px); 
        height: clamp(90px, 12vh, 120px); 
    }
    
    .promptContainer {
        padding: clamp(15px, 2.5vh, 22px) clamp(12px, 2vw, 18px);
        margin-bottom: clamp(18px, 3vh, 25px);
    }
}

@media (max-height: 700px) {
    .gameCard {
        max-height: calc(95vh - 60px);
        padding: clamp(10px, 1.5vh, 20px) clamp(15px, 2vw, 30px);
    }
    
    .mascotContainer {
        height: clamp(60px, 8vh, 80px);
        margin-bottom: clamp(10px, 1.5vh, 15px);
    }
    
    .optionsContainer {
        gap: clamp(18px, 2.5vh, 28px);
        margin-bottom: clamp(15px, 2.5vh, 25px);
    }
    
    .optionIcon {
        width: clamp(85px, 13vh, 120px); /* Adjusted for low height */
        height: clamp(85px, 13vh, 120px);
    }
    
    .optionIcon svg,
    .optionIcon img {
        width: clamp(55px, 9vh, 80px); /* Adjusted for low height */
        height: clamp(55px, 9vh, 80px);
    }
}
