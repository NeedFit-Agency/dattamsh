/* --- Base Layout --- */
.appContainer {
  display: flex;
  min-height: 100vh;
  background-color: #f0f7ff;
  background-image: 
    radial-gradient(circle at 10% 20%, rgba(26, 162, 255, 0.05) 0%, transparent 20%),
    radial-gradient(circle at 90% 80%, rgba(28, 176, 246, 0.05) 0%, transparent 20%),
    linear-gradient(45deg, rgba(26, 162, 255, 0.02) 0%, rgba(28, 176, 246, 0.02) 100%);
  position: relative;
  overflow: hidden;
}

.appContainer::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cpath d='M15 15h30v30H15z' stroke='rgba(26, 162, 255, 0.1)' stroke-width='2'/%3E%3Cpath d='M30 15l15 30H15z' stroke='rgba(28, 176, 246, 0.1)' stroke-width='2'/%3E%3C/g%3E%3C/svg%3E");
  opacity: 0.5;
  z-index: 0;
}

.mainAreaWrapper {
  flex: 1; /* Takes remaining space */
  display: flex;
  flex-direction: column;
}

/* --- Top Bar --- */
.topBar {
  padding: 10px 40px 0 40px; /* Align with contentArea/RightRail padding */
  border-bottom: 2px solid #e5e5e5; /* robolingo border color */
}

/* --- Scrollable Area --- */
.scrollableContent {
  flex: 1; /* Takes remaining height */
  display: flex;
  overflow-y: auto; /* Allow vertical scroll */
  overflow-x: hidden; /* Hide horizontal scroll */
  /* padding: 20px 20px 40px 20px; */ /* Original padding */
  padding: 20px 0 40px 0; /* Remove side padding here if contentArea/RightRail handle it */
}

/* --- Main Content Area (Lesson Path) --- */
.contentArea {
  flex-grow: 1; /* Let it grow */
  padding: 0 40px 40px 40px; /* Horizontal padding */
  display: flex;
  flex-direction: column;
  align-items: center; /* Center items horizontally */
  max-width: 500px; /* Example: Reduced width */
  margin: 0 auto; /* Center the area itself */
  box-sizing: border-box;

}

/* --- Lesson Header --- */
.lessonHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 15px 25px;
  color: white;
  border-radius: 16px;
  margin: 20px 0 40px 0;
  width: 800px;
  height: 100px;
  box-sizing: border-box;
  transition: background-color 0.3s ease;
}

/* Theme colors for different chapters */
.themeGreen {
  background-color: #04CD9C;
}

.themeOrange {
  background-color: #FF9601;
}

.themeBlue {
  background-color: #1DB0F6;
}

.themePurple {
  background-color: #CE82FF;
}

/* Update guidebook button colors based on parent theme */
.themeGreen .guidebookButton {
  color: #04CD9C;
}

.themeOrange .guidebookButton {
  color: #FF9601;
}

.themeBlue .guidebookButton {
  color: #1DB0F6;
}

.themePurple .guidebookButton {
  color: #CE82FF;
}

.headerLeft {
  display: flex;
  align-items: center;
  gap: 15px;
}

.headerLeft .icon { /* Back arrow icon */
  font-size: 20px;
  cursor: pointer; /* Indicate it might be clickable */
}

.headerTitle {
  display: flex;
  flex-direction: column;
  font-size: 14px;
  font-weight: bold;
  text-transform: uppercase;
  line-height: 1.2;
}

.headerTitle h2 {
  margin: 2px 0 0 0;
  font-size: 24px;
  font-weight: 800;
  text-transform: none; /* Keep original case */
}

.guidebookButton {
  background-color: white;
  color: #1AA2FF; /* Blue text */
  border: 2px solid #e5e5e5; /* Border */
  border-bottom: 4px solid #e5e5e5; /* 3D effect */
  border-radius: 12px;
  padding: 10px 16px;
  font-weight: 700;
  font-size: 15px;
  display: flex;
  align-items: center;
  gap: 8px;
  cursor: pointer;
  transition: background-color 0.2s, border-color 0.2s, transform 0.1s;
}
.guidebookButton:hover {
  background-color: #f7f7f7;
}
.guidebookButton:active {
  transform: translateY(1px); /* Press effect */
  border-bottom-width: 3px;
}

.guidebookButton .icon { /* Icon inside button */
  margin-right: 0; /* Use gap property */
  font-size: 18px;
}

/* --- Lesson Title Divider --- */
.lessonTitleDivider {
  position: relative;
  text-align: center;
  margin: 0 0 35px 0; /* Space below divider */
  width: 100%;
  max-width: 300px;
}

.lessonTitleDivider::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  height: 2px;
  background-color: #e5e5e5; /* Border color */
  z-index: 1;
}

.lessonTitleDivider span {
  position: relative;
  background-color: #ffffff; /* Match page background */
  padding: 0 15px;
  z-index: 2;
  color: #afafaf; /* Lighter gray text */
  font-size: 16px;
  font-weight: bold;
}

/* --- Lesson Path Container --- */
.lessonPath {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
  width: 100%;
  padding-bottom: 30px;
  min-height: 900px; /* Increased from 800px to accommodate larger items and chapter names */
  overflow: visible; /* Ensure chapter names that extend beyond container are visible */
}

/* Add floating decorative elements */
.lessonPath::before,
.lessonPath::after {
  content: '';
  position: absolute;
  width: 200px;
  height: 200px;
  background-size: contain;
  background-repeat: no-repeat;
  opacity: 0.1;
  z-index: -1;
}

.lessonPath::before {
  left: -100px;
  top: 20%;
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M50 5L20 80h60L50 5z' fill='%2358cc02'/%3E%3C/svg%3E");
  animation: float 6s ease-in-out infinite;
}

.lessonPath::after {
  right: -100px;
  bottom: 20%;
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='50' cy='50' r='45' fill='%231cb0f6'/%3E%3C/svg%3E");
  animation: float 8s ease-in-out infinite reverse;
}

@keyframes float {
  0%, 100% { transform: translateY(0) rotate(0deg); }
  50% { transform: translateY(-20px) rotate(5deg); }
}

/* Make lesson items more playful */
.lessonLink {
  position: absolute;
  display: block;
  text-decoration: none;
  width: fit-content;
  transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1), filter 0.2s ease, box-shadow 0.15s ease-in-out;
}

.lessonLink:hover {
  transform: scale(1.1) rotate(2deg);
  filter: brightness(1.1);
  z-index: 1;
}

/* Add tech-themed connecting lines */
.lessonPath::before {
  content: '';
  position: absolute;
  top: 0;
  left: 50%;
  height: 100%;
  width: 4px;
  background: repeating-linear-gradient(
    to bottom,
    #e5e5e5 0%,
    #e5e5e5 50%,
    transparent 50%,
    transparent 100%
  );
  background-size: 4px 20px;
  z-index: -1;
  animation: circuit 2s linear infinite;
}

@keyframes circuit {
  from { background-position: 0 0; }
  to { background-position: 0 20px; }
}

/* --- NEW: Section Container Styling --- */
.sectionContainer {
  display: flex;
  flex-direction: column;
  align-items: center; /* Center items *within* the section block */
  width: fit-content; /* Fit the width of the curved items */
  margin-bottom: 30px; /* Add some space BETWEEN sections */
  transition: transform 0.5s ease-out; /* Animate section shift */
  position: relative; /* Needed if children use absolute positioning */
}
/* Add extra margin to all sections except the last one */
/* Removed empty rule */

/* Style Links/Divs wrapping path items (LessonLink) */
.lessonLink {
  /* CRITICAL: Use absolute positioning */
  position: absolute;
  display: block; /* Ensure it takes space */
  text-decoration: none;
  width: 110px; /* Match the exact width of the badge */
  height: 110px; /* Match the exact height of the badge */
  /* Remove margin-bottom - spacing controlled by 'top' */
  /* Remove transform transition if not desired for absolute positioning */
  transition: transform 0.1s ease-in-out, filter 0.2s ease, box-shadow 0.15s ease-in-out; /* Keep item transitions */
  z-index: 5; /* Ensure it stays above other elements */
}
/* Ensure last item in a section doesn't have extra margin */
.sectionContainer .lessonLink:last-child {
    margin-bottom: 0;
}
/* Style Links/Divs wrapping path items */

/* Target the LessonPathItem div inside the link/div to reset potential margins */
.lessonLink > div {
  margin-bottom: 0 !important;
}

/* --- Approximate Curve Effect using index classes --- */
/* Add/Adjust translateX values for desired curve based on 17+ items */
.itemPosition0  { transform: translateX(0px); }
.itemPosition1  { transform: translateX(-20px); }
.itemPosition2  { transform: translateX(10px); }
.itemPosition3  { transform: translateX(25px); }
.itemPosition4  { transform: translateX(5px); }
.itemPosition5  { transform: translateX(-15px); }
.itemPosition6  { transform: translateX(-5px); }
.itemPosition7  { transform: translateX(15px); }
.itemPosition8  { transform: translateX(30px); }
.itemPosition9  { transform: translateX(10px); }
.itemPosition10 { transform: translateX(-10px); }
.itemPosition11 { transform: translateX(-25px); }
.itemPosition12 { transform: translateX(0px); }
.itemPosition13 { transform: translateX(20px); }
.itemPosition14 { transform: translateX(-5px); }
.itemPosition15 { transform: translateX(-20px); }
.itemPosition16 { transform: translateX(10px); }
/* Add more if you have more than 17 items */
/* .itemPosition17 { transform: translateX( ... ); } */
/* .itemPosition18 { transform: translateX( ... ); } */


/* --- Scroll Down Button --- */
.scrollDownButton {
  align-self: center;
  background-color: #f7f7f7;
  border: 2px solid #e5e5e5;
  border-radius: 50%;
  width: 45px;
  height: 45px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 30px;
  color: #afafaf;
  font-size: 20px;
  transition: background-color 0.2s;
  z-index: 2;
}
.scrollDownButton:hover {
  background-color: #efefef;
}
.scrollDownButton .icon {
  margin: 0; /* Reset default icon margin */
}


@media (max-width: 1024px) {
    .topBar {
        padding: 10px 20px 0 20px;
    }
     .scrollableContent {
        padding: 20px 10px 40px 10px; /* Adjust padding */
     }
    .contentArea {
        padding: 0 15px 40px 15px; /* Adjust padding */
        max-width: 100%; /* Allow content area to take more width */
    }
}

@media (max-width: 768px) {
    .appContainer {
        flex-direction: column; /* Stack sidebar and content */
    }
    .mainAreaWrapper {
        height: auto;
    }
    .scrollableContent {
        flex-direction: column; /* Stack contentArea and RightRail */
        overflow-y: visible; /* Let page scroll normally */
        padding: 20px 10px 40px 10px;
    }
    .contentArea {
        max-width: 100%;
        padding: 0 10px 40px 10px;
    }
}

/* --- Main Content Area --- */
.contentArea {
  max-width: 600px; /* Increased from 500px */
  padding: 0 50px 40px 50px; /* Increased horizontal padding */
}

/* --- Right Rail --- */
.rightRail {
  position: sticky;
  top: 20px;
  align-self: flex-start;
  width: 320px;
  padding: 25px;
  margin-right: 30px;
}

/* --- Increased Text Sizes --- */
.headerTitle h2 {
  font-size: 28px; /* Increased from 24px */
}

.guidebookButton {
  font-size: 17px; /* Increased from 15px */
  padding: 14px 22px; /* Larger padding */
}

.lessonTitleDivider span {
  font-size: 18px; /* Increased from 16px */
}

/* --- Larger Scroll Button --- */
.scrollDownButton {
  width: 55px;
  height: 55px;
  font-size: 26px;
}

/* Add decorative icon styles */
.decorativeIcon {
  position: absolute;
  font-size: 2.5rem;
  color: rgba(26, 162, 255, 0.15);
  animation: floatAndGlow 4s ease-in-out infinite;
  filter: drop-shadow(0 0 10px rgba(28, 176, 246, 0.2));
  z-index: 0;
  transition: all 0.3s ease;
}

.decorativeIcon:hover {
  color: rgba(26, 162, 255, 0.3);
  transform: scale(1.1) rotate(5deg);
  filter: drop-shadow(0 0 15px rgba(28, 176, 246, 0.4));
}

@keyframes floatAndGlow {
  0%, 100% {
    transform: translateY(0) rotate(0deg);
    filter: drop-shadow(0 0 10px rgba(28, 176, 246, 0.2));
  }
  50% {
    transform: translateY(-15px) rotate(5deg);
    filter: drop-shadow(0 0 20px rgba(28, 176, 246, 0.4));
  }
}

/* Add tech-themed connecting lines */
.lessonPath::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: 
    linear-gradient(45deg, transparent 45%, rgba(26, 162, 255, 0.1) 45%, rgba(26, 162, 255, 0.1) 55%, transparent 55%),
    linear-gradient(-45deg, transparent 45%, rgba(28, 176, 246, 0.1) 45%, rgba(28, 176, 246, 0.1) 55%, transparent 55%);
  background-size: 30px 30px;
  z-index: -1;
  animation: moveBg 20s linear infinite;
}

@keyframes moveBg {
  from { background-position: 0 0; }
  to { background-position: 60px 60px; }
}