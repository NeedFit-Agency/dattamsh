/* learning.module.css */
/* 
/* ----- Base Variables (Ensure these are defined in globals.css or here) ----- */

  /* ----- Main Container & Layout ----- */
  .learningContainer {
    display: flex;
    min-height: 100vh;
    background-color: var(--background-medium);
    justify-content: center;
    align-items: center;
    padding: 20px;
  }
  
  .learningContent {
    flex: 1;
    display: flex;
    flex-direction: column;
    max-width: 900px; /* Reduced from 1200px for better readability */
    margin: 0 auto;
    background-color: var(--white);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);
    border-radius: 20px;
    overflow: hidden;
    min-height: calc(100vh - 40px);
  }
  
  .learningLayout { /* Applied in layout.tsx */
    width: 100%;
    min-height: 100vh;
  }
  
  /* ----- Header ----- */
  .learningHeader {
    padding: 16px 24px;
    border-bottom: 1px solid var(--border-light);
    background: var(--white);
    position: sticky;
    top: 0;
    z-index: 10;
  }
  
  .headerNavigation {
    display: flex;
    align-items: center;
    gap: 20px;
    max-width: 100%;
  }
  
  .backButton {
    background: none;
    border: none;
    color: var(--text-medium);
    cursor: pointer;
    padding: 8px;
    border-radius: 8px;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    gap: 6px;
    font-size: var(--font-size-lg); /* Icon size */
  }
  
  .backText {
    font-size: var(--font-size-sm);
    font-weight: 600;
    margin-left: 2px;
    display: none; /* Hide text on mobile */
  }
  
  .backButton:hover {
    background-color: var(--background-medium);
    color: var(--text-dark);
  }
  
  .progressBar {
    flex: 1;
    height: 8px;
    background-color: var(--background-medium);
    border-radius: 20px;
    overflow: hidden;
    border: none;
  }
  
  .progressFill {
    height: 100%;
    background: linear-gradient(90deg, #4CAF50, #8BC34A);
    border-radius: 20px;
    transition: width 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .headerActions {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-left: auto; /* Pushes actions to the right */
  }
  
  .heartsContainer {
    display: flex;
    align-items: center;
    gap: 4px;
    color: var(--error-red);
    font-size: var(--font-size-lg); /* Heart icon size */
  }
  .heartsContainer span { /* Optional: Add heart count */
    font-size: var(--font-size-base);
    font-weight: 700;
    color: var(--error-red);
    margin-left: 2px;
  }
  
  .settingsButton {
    background: none;
    border: none;
    color: var(--text-medium);
    font-size: var(--font-size-lg);
    cursor: pointer;
    padding: 8px;
    border-radius: 8px;
    transition: all 0.2s ease;
  }
  .settingsButton:hover {
    background-color: var(--background-medium);
    color: var(--text-dark);
  }
  
  
  /* ----- Main Content Area ----- */
  .learningMain {
    flex: 1;
    padding: 32px 24px;
    display: flex;
    flex-direction: column;
    max-width: 800px;
    margin: 0 auto;
    width: 100%;
  }
  
  .lessonTitle {
    font-size: 28px;
    font-weight: 700;
    color: var(--text-dark);
    margin-bottom: 24px;
    text-align: center;
  }
  
  .learningArea {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: clamp(20px, 4vw, 30px);
  }
  
  /* ----- Learning Slide Specific ----- */
  .learningSlideLayout {
    display: grid;
    grid-template-columns: 1fr;
    gap: 24px;
    align-items: start;
  }
  
  @media (min-width: 768px) {
    .learningSlideLayout {
      grid-template-columns: 1fr 1.5fr;
    }
  }
  
  .learningVisualColumn img {
      width: 100%;
      max-width: 400px; /* Limit main image size */
      height: auto;
      border-radius: 16px;
      box-shadow: 0 6px 20px rgba(0,0,0,0.1);
      margin: 0 auto; /* Center image if column is wider */
      display: block;
      border: 1px solid var(--border-light);
  }
  
  .exampleImageContainer {
    display: flex;
    justify-content: center;
    gap: 15px;
    flex-wrap: wrap;
    margin-top: 20px;
    padding: 15px;
    background-color: var(--background-medium);
    border-radius: 12px;
  }
  .exampleImage {
    width: clamp(80px, 15vw, 120px); /* Responsive size for example images */
    height: auto;
    object-fit: contain;
    background-color: var(--white);
    padding: 8px;
    border-radius: 8px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    border: 1px solid var(--border-light);
  }
  
  /* ----- Mascot ----- */
  .mascotContainer {
    display: flex;
    gap: 20px;
    align-items: flex-start;
    margin-bottom: 24px;
  }
  
  .mascotImageContainer {
    width: 80px; /* Adjust size as needed */
    height: 100px;
    flex-shrink: 0; /* Prevent mascot from shrinking */
    display: flex;
    align-items: flex-end; /* Mascot sits at bottom of its container */
    margin-left: 15px; /* Space between bubble and mascot */
  }
  
  .mascotImage {
    width: 120px;
    height: 120px;
    object-fit: contain;
    margin-bottom: -20px; /* Pull up slightly to overlap with speech bubble */
  }
  
  .mascotSpeechBubble {
    flex: 1;
    background-color: #f8f9fa;
    border-radius: 16px;
    padding: 20px;
    position: relative;
    border: 1px solid #e9ecef;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  }
  
  /* Speech bubble tail */
  .mascotSpeechBubble::after {
    content: '';
    position: absolute;
    left: 100%; /* Position tail to the right of the bubble */
    top: 30px; /* Adjust vertical position */
    border-top: 15px solid transparent;
    border-bottom: 15px solid transparent;
    border-left: 15px solid #e7f8ff; /* Pointing left from bubble */
    filter: drop-shadow(1px 1px 1px rgba(0,0,0,0.03));
  }
  
  .mascotSpeechBubble p {
    margin: 0 0 10px 0; /* Space between paragraphs */
    font-size: var(--font-size-base); /* Responsive base font size */
    line-height: 1.6;
    color: var(--text-dark);
  }
  .mascotSpeechBubble p:last-child {
    margin-bottom: 0; /* Remove margin from last paragraph */
  }
  
  .audioButton {
    background-color: var(--primary-blue);
    color: var(--white);
    border: none;
    border-radius: 10px;
    padding: 8px 14px;
    font-size: var(--font-size-sm); /* Slightly smaller font */
    font-weight: 600;
    cursor: pointer;
    display: inline-flex; /* Align icon and text nicely */
    align-items: center;
    gap: 8px;
    margin-top: 15px; /* Space above the button */
    transition: background-color 0.2s ease, transform 0.1s ease;
    border-bottom: 2px solid var(--primary-blue-dark);
  }
  
  .audioButton:hover {
    background-color: var(--primary-blue-dark);
  }
  .audioButton:active {
      transform: translateY(1px); /* Subtle press effect */
      border-bottom-width: 1px;
  }
  /* Animation for when audio is playing */
  .audioButtonPlaying {
      animation: pulse 1.5s infinite;
  }
  
  
  /* ----- Drag and Drop Specific ----- */
  .dragDropInstruction {
    font-size: var(--font-size-base);
    color: var(--text-medium);
    text-align: center;
    margin-bottom: 15px; /* Reduced margin */
    font-weight: 500;
  }
  .dragDropArea {
    max-width: 700px;
    margin: 0 auto;
    width: 100%;
  }
  .draggableSourceList {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 12px;
    padding: 20px;
    background-color: #f8f9fa;
    border-radius: 16px;
    min-height: 80px;
    border: 2px dashed #dee2e6;
    margin-bottom: 24px;
  }
  .dropTargetsContainer {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
    margin-top: 24px;
  }
  .dropTargetColumn {
    background-color: var(--white);
    border-radius: 16px;
    padding: 20px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    border: 1px solid var(--border-light);
    min-height: 200px;
    display: flex;
    flex-direction: column;
  }
  /* Highlight when dragging over a drop target */
  .dropTargetColumnDraggingOver {
     background-color: #e0f2fe; /* Light blue highlight */
  }
  .dropTargetTitle {
    font-size: var(--font-size-lg);
    font-weight: 600;
    text-align: center;
    margin-bottom: 15px;
    padding-bottom: 8px;
    border-bottom: 2px solid var(--border-light);
    flex-shrink: 0; /* Prevent title from shrinking */
  }
  .dropTargetTitleNatural { color: var(--correct-green); border-bottom-color: var(--correct-green); }
  .dropTargetTitleManMade { color: var(--primary-blue); border-bottom-color: var(--primary-blue); }
  .dropTargetList {
    display: flex;
    flex-direction: column; /* Stack items vertically */
    gap: 10px;
    min-height: 100px; /* Minimum area for dropping */
    flex-grow: 1; /* Allow list to grow to fill column */
  }
  .draggableItem {
    background-color: var(--white);
    padding: 10px 15px;
    border-radius: 8px;
    border: 1px solid var(--border-light);
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    display: flex;
    align-items: center;
    /* justify-content: center; /* Center text/image */
    justify-content: flex-start; /* Align left for consistency */
    gap: 8px;
    font-size: var(--font-size-base);
    font-weight: 500;
    color: var(--text-dark);
    cursor: grab; /* Indicate draggable */
    transition: background-color 0.2s ease, box-shadow 0.2s ease;
  }
  .draggableItem:hover {
     box-shadow: 0 4px 8px rgba(0,0,0,0.1); /* Slight lift on hover */
  }
  /* Style applied by @hello-pangea/dnd while dragging */
  .draggableItemDragging {
    box-shadow: 0 6px 12px rgba(0,0,0,0.15);
    transform: scale(1.03); /* Slightly enlarge */
    background-color: #f0f9ff; /* Light blue background while dragging */
  }
  /* Style for the placeholder space left behind by @hello-pangea/dnd */
  .placeholder {
    background-color: #e2e8f0; /* Light gray placeholder */
    border-radius: 8px;
    /* Height/width are handled by the library based on dragged item */
  }
  .dragDropFeedback {
    margin-top: 20px;
    padding: 12px;
    border-radius: 8px;
    font-weight: 600;
    text-align: center;
  }
  .dragDropFeedbackCorrect {
     background-color: var(--accent-light);
     color: var(--white);
  }
  .dragDropFeedbackIncorrect {
     background-color: #fee2e2; /* Light red */
     color: #b91c1c; /* Dark red text */
  }
  /* Styling for Correct/Incorrect Items AFTER checking */
  .itemCorrect {
    border-left: 4px solid var(--correct-green);
    background-color: #f0fdf4; /* Light green BG for correct items */
  }
  .itemIncorrect {
    border-left: 4px solid var(--incorrect-red);
    background-color: #fff1f2; /* Light red BG for incorrect items */
  }
  
  
  /* ----- Footer Buttons ----- */
  .learningFooter {
    padding: 16px 24px;
    border-top: 1px solid var(--border-light);
    background-color: var(--white);
    display: flex;
    justify-content: space-between;
    gap: 16px;
  }
  .previousButton, .continueButton {
    padding: 12px 24px;
    border-radius: 12px;
    font-size: 16px;
    font-weight: 600;
    display: inline-flex;
    align-items: center;
    gap: 8px;
    transition: all 0.2s ease;
    min-width: 140px;
    justify-content: center;
  }
  .previousButton {
    background-color: var(--white);
    border: 2px solid var(--border-light);
    color: var(--text-medium);
  }
  .previousButton:hover:not(:disabled) {
    background-color: var(--background-medium);
    border-color: var(--text-light);
    color: var(--text-dark);
  }
  .previousButton:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  .continueButton {
    background-color: #4CAF50;
    color: white;
    border: none;
    box-shadow: 0 4px 12px rgba(76, 175, 80, 0.2);
  }
  .continueButton:hover:not(:disabled) {
    transform: translateY(-2px);
    box-shadow: 0 6px 16px rgba(76, 175, 80, 0.3);
  }
  .continueButton:disabled {
    background-color: var(--text-light);
    border-bottom-color: var(--text-medium);
    opacity: 0.7;
    cursor: not-allowed;
    box-shadow: none;
  }
  
  /* ----- Modals ----- */
  .modalOverlay { position: fixed; top: 0; left: 0; right: 0; bottom: 0; background-color: rgba(0, 0, 0, 0.6); display: flex; align-items: center; justify-content: center; z-index: 1000; animation: fadeIn 0.2s ease-out; }
  .modalContent { background-color: var(--white); border-radius: 16px; padding: 24px; max-width: 400px; width: 90%; box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2); animation: slideInModal 0.3s ease-out; }
  .modalButtons { display: flex; gap: 12px; justify-content: flex-end; margin-top: 20px; }
  .modalCancel, .modalConfirm { padding: 10px 16px; border-radius: 8px; font-weight: 600; cursor: pointer; border: none; font-size: var(--font-size-sm); }
  .modalCancel { background-color: var(--white); border: 1px solid var(--border-light); color: var(--text-dark); }
  .modalCancel:hover { background-color: var(--background-medium); }
  .modalConfirm { background-color: var(--error-red); color: var(--white); }
  .modalConfirm:hover { background-color: #dc2626; }
  
  
  /* ----- Animations ----- */
  @keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }
  @keyframes slideInModal { from { transform: translateY(-20px) scale(0.95); opacity: 0; } to { transform: translateY(0) scale(1); opacity: 1; } }
  @keyframes slideUp { from { transform: translateY(100%); opacity: 0; } to { transform: translateY(0); opacity: 1; } }
  @keyframes mascotBounce { 0%, 100% { transform: translateY(0); } 50% { transform: translateY(-8px); } }
  @keyframes pulse { 0% { opacity: 1; } 50% { opacity: 0.7; } 100% { opacity: 1; } }
  
  /* ----- Responsive Styles ----- */
  @media (min-width: 640px) {
    .backText { display: inline; }
    .headerNavigation { flex-wrap: nowrap; }
  }
  @media (min-width: 768px) { /* Adjust mascot bubble tail */
      .mascotSpeechBubble::after { top: 20px; } /* Better vertical alignment on larger screens */
  }
  @media (min-width: 1024px) {
     /* Optional: Adjustments for very large screens */
  }
  @media (max-width: 768px) {
    .learningContainer {
      padding: 0;
    }
    
    .learningContent {
      border-radius: 0;
      min-height: 100vh;
    }
    
    .learningMain {
      padding: 24px 16px;
    }
    
    .mascotContainer {
      flex-direction: column;
    }
    
    .dropTargetsContainer {
      grid-template-columns: 1fr;
    }
  }

/* Image Styling */
.exampleImage {
    width: 100px;
    height: 100px;
    object-fit: contain;
    margin: 10px;
    transition: transform 0.2s ease;
}

.exampleImage:hover {
    transform: scale(1.1);
}

.exampleImageContainer {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
    padding: 20px;
}

.draggableItem img {
    width: 40px;
    height: 40px;
    object-fit: contain;
    margin-right: 10px;
}

/* Ensure images in the source list are properly sized */
.draggableSourceList img {
    width: 30px;
    height: 30px;
    object-fit: contain;
    vertical-align: middle;
}

/* Add some hover effects to the images */
.draggableItem:hover img {
    transform: scale(1.1);
    transition: transform 0.2s ease;
}